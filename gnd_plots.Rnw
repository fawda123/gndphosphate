\documentclass[letterpaper,12pt]{article}
\usepackage[top=1in,bottom=1in,left=1in,right=1in]{geometry}
\usepackage{setspace}
\usepackage[colorlinks=true,urlcolor=blue,citecolor=blue,linkcolor=blue]{hyperref}
\usepackage{indentfirst}
\usepackage{multirow}
\usepackage{booktabs}
\usepackage[final]{animate}
\usepackage{graphicx}
\usepackage{verbatim}
\usepackage{rotating}
\usepackage{tabularx}
\usepackage{array}
\usepackage{subfig} 
\usepackage[noae]{Sweave}
\usepackage{cleveref}
\usepackage[figureposition=bottom]{caption}
\usepackage{paralist}
\usepackage{acronym}
\usepackage{outlines}
\usepackage{pdflscape}

%for supplemental figures/tables
\newcommand{\beginsupplement}{%
        \setcounter{table}{0}
        \renewcommand{\thetable}{S\arabic{table}}%
        \setcounter{figure}{0}
        \renewcommand{\thefigure}{S\arabic{figure}}%
     }

% knitr options
<<setup, echo = FALSE, cache = F>>=
library(knitr)
# set global chunk options
opts_chunk$set(fig.path = 'figs/', fig.align = 'center', fig.show = 'hold', message = F, results = 'asis', dev = c('pdf', 'tiff'), dev.args = list(pdf = list(family = 'serif'), tiff = list(compression = 'lzw', family = 'serif')), dpi = 600, fig.pos = '!ht', warning = F, tangle = TRUE, 
  fig.process = function(x) {
  x2 = sub('-\\d+([.][a-z]+)$', '\\1', x)
  if (file.rename(x, x2)) x2 else x
  })
options(replace.assign = TRUE, width = 90)
@

<<echo = FALSE, message = FALSE>>=
# libraries to use
library(ggord)
library(dplyr)
library(tidyr)
library(ggplot2)
library(stargazer)
library(SWMPr)
library(agricolae)
library(reshape2)
library(Hmisc)
library(gridExtra)
library(nlme)
library(vegan)
library(multcompView)
library(grid)
library(NADA)
library(purrr)
library(lubridate)
library(EnvStats)
source('R/funcs.R')

# load data
data(wq_dat)
data(met_dat)
data(nut_dat)
@

\begin{document}

%%%%%%
% figures 

\setcounter{figure}{1}
% \setcounter{table}{1}

\begin{landscape}
\centering\vspace*{\fill}
<<Fig2, fig.width = 9, fig.height = 5, out.width = '1.3\\textwidth', echo = FALSE, fig.cap = 'Time series of total precipitation, salinity, pH, and phosphate for Bangs Lake, Grand Bay reserve.  All observations are daily averages, excluding phosphate which was sampled monthly.  Vertical green bars indicate a heavy rain event in April 2005 and hurricane Isaac in August 2012.  Salinity and pH include a loess smooth to reduce variability. Orthophosphate is colored by event categories in relation to the vertical green bars.  E1A: event 1 acute, E1C: event 1 chronic, NI1: non-impact 1, E2A: event 2 acute, E2C: event 2 chronic, and NI2: non-impact 2.'>>=
# ts plots for BL
# first get cumulative daily precipitation for met
# then combine wq and met, take daily ave, make long form

data(met_supp)

# met process for totprcp
met_proc <- mutate(met_dat, datetimestamp = as.Date(datetimestamp)) %>% 
  rename(date = datetimestamp) %>% 
  group_by(date, TimeFrame) %>% 
  summarise(totprcp = sum(totprcp, na.rm = TRUE)) %>% 
  as.data.frame
met_proc <- rbind(met_proc, met_supp) %>% 
  arrange(date)

# nutrients process for BL phosphorus 
nut_proc <- filter(nut_dat, nutrient == 'PO4F' & StationCode == 'BL') %>% 
  select(-nutrient, -value, -stat_nut, -StationCode) %>% 
  rename(logP = logvalue)
  
# combine wq with met and nut
toplo_wq <- filter(wq_dat, StationCode == 'BL') %>% 
  select(-StationCode, -depth, -turb) %>% 
  mutate(datetimestamp = as.Date(datetimestamp)) %>% 
  rename(date = datetimestamp) %>% 
  group_by(date, TimeFrame) %>% 
  summarise_each(funs(mean(., na.rm = TRUE))) %>% 
  full_join(met_proc, by = c('date', 'TimeFrame')) %>%
  gather('variable', 'value', sal:totprcp) %>% 
  mutate(variable = factor(variable, 
    levels = c('totprcp', 'sal', 'ph'),
    labels = c('Total precipitation (mm/d)', 'Salinity', 'pH')
    )) %>% 
  rename(Event = TimeFrame)

# combine wq with met and nut
toplo_nut <- gather(nut_proc, 'variable', 'value', logP) %>% 
  mutate(variable = factor(variable, 
    levels = c('logP'),
    labels = c('Orthophosphate (mg P/L)') # still in log units but axis scaling will show this as back-transformed
    )) %>% 
  rename(Event = TimeFrame) %>% 
  data.frame %>% 
  na.omit

# event dates
events <- c('2005-04-11', '2012-08-01')
events <- as.Date(events)

mars1 <- grid::unit(c(0, 0, 0, 0), 'mm')
mars2 <- grid::unit(c(0, 0, 0, 0), 'mm')
lims <- as.Date(c('2004-01-01', '2015-12-31'))

# the plots, a shitty mess
p1 <- ggplot(toplo_wq, aes(x = date, y = value)) + 
  geom_line() +
  geom_vline(xintercept = as.numeric(events), colour = 'lightgreen', alpha = 0.6, size = 3) +
  geom_line() +
  facet_wrap(~variable, scales = 'free_y', ncol = 1) +
  theme_bw() +
  theme(
    axis.title.x = element_blank(), 
    axis.title.y = element_blank(), 
    axis.text.x = element_blank(), 
    axis.ticks.x = element_blank(),
    plot.margin = mars1, 
    strip.background = element_blank(),
    panel.grid.minor = element_blank()
    ) +
  scale_x_date(limits = lims, date_breaks = '1 year') + 
  stat_smooth(data = filter(toplo_wq, variable %in% c('Salinity', 'pH')),
    method = 'loess', span = 0.1, n = 2000, se = FALSE, size = 1, colour = 'lightblue')

cls <- RColorBrewer::brewer.pal(6, 'BrBG')
cls <- c(cls[1:3], cls[c(6, 5, 4)])
p2 <- ggplot(toplo_nut, aes(x = date, y = 10 ^ value)) + 
  geom_point(alpha = 0.8, size = 3, pch = 21,
    aes(fill = Event)) +
  geom_vline(xintercept = as.numeric(events), colour = 'lightgreen', alpha = 0.6, size = 3) +
  facet_wrap(~variable, scales = 'free_y') +
  theme_bw() +
  theme(
    axis.title.x = element_blank(), 
    axis.title.y = element_blank(),
    plot.margin = mars2, 
    strip.background = element_blank(), 
    panel.grid.minor = element_blank()
    ) + 
  scale_x_date(limits = lims, date_breaks = '1 year', date_labels = '%Y') + 
  scale_fill_manual(values = cls) +
  scale_y_log10(ylab, breaks = c(0.01, 0.1, 1, 5))
pleg <- g_legend(p2)
p2 <- p2 + theme(legend.position = 'none')

# align
pA <- ggplot_gtable(ggplot_build(p1))
pB <- ggplot_gtable(ggplot_build(p2))
maxWidth = unit.pmax(pA$widths[2:3], pB$widths[2:3])

# Set the widths
pA$widths[2:3] <- maxWidth
pB$widths[2:3] <- maxWidth

grid.arrange(
  arrangeGrob(pA, pB, ncol = 1, heights = c(3, 1.1)),
  pleg, 
  ncol = 2, 
  widths = c(1, 0.1)
)

@
\end{landscape}
\clearpage

<<Fig3, fig.width = 9, fig.height = 10, echo = FALSE, fig.cap = 'Time series of daily precipitation, sensor depth, salinity, turbidity, and pH for Bangs Lake, Grand Bay reserve.  Precipitation data are daily totals from the Pascagoula International Airport.  All other data were collected at 15 minute time steps.  Green shading indicates period of high precipitation for a heavy rain event in 2005 (left, March 31\\textsuperscript{st} to April 1\\textsuperscript{st}) and hurricane Isaac in 2012 (right, August 28\\textsuperscript{th} to 30\\textsuperscript{th}).  Red shading for the first event indicates the date of documented phosphorus spill.  E1A: event 1 acute, E2A: event 2 acute.'>>=
# ts plots for BL, wq only expanded about the events
# first get cumulative daily precipitation for met
# then combine wq and met, take daily ave, make long form

data(met_supp_e1)
data(met_supp_e2)
met_supp_all <- rbind(met_supp_e1, met_supp_e2)

# met process for totprcp
met_proc <- select(met_dat, datetimestamp, totprcp)
  
# combine wq with met and nut
toplo <- filter(wq_dat, StationCode == 'BL') %>% 
  select(-StationCode) %>% 
  mutate(
    turb = ifelse(turb < 250, turb, NA)# remove anom value
  ) %>% 
  left_join(., met_supp_all, by = c('datetimestamp', 'TimeFrame')) %>% 
  select(datetimestamp, TimeFrame, sal, ph, turb, depth, totprcp) %>% 
  gather('variable', 'value', sal:totprcp) %>% 
  mutate(variable = factor(variable, 
    levels = c('totprcp', 'depth', 'sal', 'turb', 'ph'),
    labels = c('Daily precipitation (cm/d)', 'Sensor depth (m)', 'Salinity', 'Turbidity (NTU)', 'pH')
    )) %>% 
  rename(Event = TimeFrame)

# precip dates
events1 <- c('2005-03-31', '2005-04-01')
events1 <- as.POSIXct(events1, format = '%Y-%m-%d', tz = 'America/Regina')
events1 <- data.frame(xmin = events1[1], xmax = events1[2], ymin = -Inf, ymax = Inf, Event = 'E1A')
events2 <- c('2012-08-28', '2012-08-30')
events2 <- as.POSIXct(events2, format = '%Y-%m-%d', tz = 'America/Regina')
events2 <- data.frame(xmin = events2[1], xmax = events2[2], ymin = -Inf, ymax = Inf, Event = 'E2A')
events <- rbind(events1, events2)
events$Event <- as.character(events$Event)

spill <- as.POSIXct('2005-04-14', format = '%Y-%m-%d', tz = 'America/Regina')

# subset +- one month from each event
subdts <- c('2005-03-20 0:0', '2005-05-01 0:0', '2012-08-20 0:0', '2012-10-01 0:0')
subdts <- as.POSIXct(subdts, format = '%Y-%m-%d %H:%M', tz = 'America/Regina')
toplo1 <- filter(toplo, datetimestamp >= subdts[1] & datetimestamp <= subdts[2]) %>% 
  mutate(Event = 'E1A')
toplo2 <- filter(toplo, datetimestamp >= subdts[3] & datetimestamp <= subdts[4]) %>% 
  mutate(Event = 'E2A')
toplo <- rbind(toplo1, toplo2)


# precip
toplopr <- filter(toplo, variable %in% 'Daily precipitation (cm/d)')
txt <- data.frame(
  Event = c('E1A', 'E2A'), 
  labs = c('2005', '2012'), 
  x = c(subdts[1], subdts[3]), 
  y = 15
)
p1 <- ggplot() + 
  geom_rect(data = events, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
            fill = 'lightgreen', alpha = 0.6) +
  geom_vline(xintercept = as.numeric(spill), colour = 'tomato', alpha = 0.8, size = 1.3, linetype = 'dotted') +
  geom_bar(data = na.omit(toplopr), aes(x = datetimestamp, y = 0.1 + value),
           stat = 'identity') +
  scale_y_continuous('Daily precipitation (cm/d)') + 
  facet_wrap(~ Event, scales = 'free_x', ncol = 2) +
  geom_label(data = txt, aes(group = Event, label = labs, x = x, y = y), hjust = 0.4, vjust = 1) +
  theme_bw() +
  theme(
    axis.title.x = element_blank(), 
    strip.background = element_blank(), 
    panel.grid.minor = element_blank()
  ) + 
  scale_x_datetime(date_breaks = '1 week', date_labels = '%b %d')

# depth
toplodp<- filter(toplo, variable %in% 'Sensor depth (m)')
p2 <- ggplot() + 
  geom_rect(data = events, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
    fill = 'lightgreen', alpha = 0.6) +
  geom_vline(xintercept = as.numeric(spill), colour = 'tomato', alpha = 0.8, size = 1.3, linetype = 'dotted') +
  geom_line(data = toplodp, aes(x = datetimestamp, y = value)) +
  scale_y_continuous('Sensor depth (m)') + 
  facet_wrap(~ Event, scales = 'free_x', ncol = 2) +
  theme_bw() +
  theme(
    axis.title.x = element_blank(), 
    strip.background = element_blank(), 
    panel.grid.minor = element_blank()
  ) + 
  scale_x_datetime(date_breaks = '1 week', date_labels = '%b %d')


# salinity
toplosl <- filter(toplo, variable %in% 'Salinity')
p3 <- ggplot() + 
  geom_rect(data = events, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
    fill = 'lightgreen', alpha = 0.6) +
  geom_vline(xintercept = as.numeric(spill), colour = 'tomato', alpha = 0.8, size = 1.3, linetype = 'dotted') +
  geom_line(data = toplosl, aes(x = datetimestamp, y = value)) +
  scale_y_continuous('Salinity') + 
  facet_wrap(~ Event, scales = 'free_x', ncol = 2) +
  theme_bw() +
  theme(
    axis.title.x = element_blank(), 
    strip.background = element_blank(), 
    panel.grid.minor = element_blank()
  ) + 
  scale_x_datetime(date_breaks = '1 week', date_labels = '%b %d')

# turbidity
toplotr <- filter(toplo, variable %in% 'Turbidity (NTU)')
p4 <- ggplot() + 
  geom_rect(data = events, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
    fill = 'lightgreen', alpha = 0.6) +
  geom_vline(xintercept = as.numeric(spill), colour = 'tomato', alpha = 0.8, size = 1.3, linetype = 'dotted') +
  geom_line(data = toplotr, aes(x = datetimestamp, y = value)) +
  scale_y_continuous('Turbidity (NTU)') + 
  facet_wrap(~ Event, scales = 'free_x', ncol = 2) +
  theme_bw() +
  theme(
    axis.title.x = element_blank(), 
    strip.background = element_blank(), 
    panel.grid.minor = element_blank()
  ) + 
  scale_x_datetime(date_breaks = '1 week', date_labels = '%b %d')

# salinity
toploph <- filter(toplo, variable %in% 'pH')
p5 <- ggplot() + 
  geom_rect(data = events, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
    fill = 'lightgreen', alpha = 0.6) +
  geom_vline(xintercept = as.numeric(spill), colour = 'tomato', alpha = 0.8, size = 1.3, linetype = 'dotted') +
  geom_line(data = toploph, aes(x = datetimestamp, y = value)) +
  scale_y_continuous('pH') + 
  facet_wrap(~ Event, scales = 'free_x', ncol = 2) +
  theme_bw() +
  theme(
    axis.title.x = element_blank(), 
    strip.background = element_blank(), 
    panel.grid.minor = element_blank()
  ) + 
  scale_x_datetime(date_breaks = '1 week', date_labels = '%b %d')

grid.arrange(p1, p2, p3, p4, p5, ncol = 1)

@
\clearpage

<<Fig4, fig.width = 7.5, fig.height = 7, echo = FALSE, fig.cap = 'Monthly phosphate time series at Bangs North (BN), Bangs Lake (BL), Point aux Chenes (PC), and Bayou Cumbest (BC) sites at Grand Bay. Distance from spill increases from top to bottom. Vertical green bars indicate a heavy rain event in April 2005 and hurricane Isaac in August 2012. E1A: event 1 acute, E1C: event 1 chronic, NI1: non-impact 1, E2A: event 2 acute, E2C: event 2 chronic, and NI2: non-impact 2.'>>=

data(nut_dat)
timeframes <- c('E1A', 'E1C', 'NI1', 'E2A', 'E2C', 'NI2')

toplo <- filter(nut_dat, nutrient == 'PO4F') %>% 
  rename(
    Event = TimeFrame
  ) %>% 
  mutate(Event = factor(Event, levels = timeframes))


ylab <- expression(paste('Orthophosphate (mg P/L)'))

toplo$StationCode <- factor(toplo$StationCode, levels = c('BN', 'BL', 'PC', 'BC'))

# event dates
events <- c('2005-04-01', '2012-08-01')
events <- as.Date(events)

cls <- RColorBrewer::brewer.pal(6, 'BrBG')
cls <- c(cls[1:3], cls[c(6, 5, 4)])

# line plots
p1 <- ggplot(toplo, aes(x = date, y = value)) +
  geom_line() + 
  geom_point(aes(fill = Event), pch = 21, size = 2.5) +
  facet_wrap(~ StationCode, ncol = 1) +
  scale_y_log10(ylab, breaks = c(0.01, 0.1, 1, 5)) +
  geom_vline(xintercept = as.numeric(events), colour = 'lightgreen', alpha = 0.6, size = 3) +
  scale_fill_manual(values = cls) +
  scale_x_date(date_breaks = '1 year', date_labels = '%Y') +
  guides(fill = guide_legend(ncol = 6)) +
  theme_bw() +
  theme(
    legend.position = 'top', 
    axis.title.x = element_blank(),
    panel.grid.minor = element_blank(),
    strip.background = element_blank()
  )
p1
@
\clearpage

<<Fig5, fig.width = 11, fig.height = 5, echo = FALSE, fig.cap = 'Diel phosphate and salinity data before and after Hurricane Isaac during the second spill event. Bayou Cumbest, is approximately 7 km (hydrologically) from the spill site and elevated phosphorus is observed with tidal influx (depth) following the event.'>>=
# get data
dat <- get(load(file = 'data/isco.RData'))

#make the date/time column POSIXct, so it will be treated
#like an actualy date/time and not a factor
dat$DateTime <- as.POSIXct(dat$DateTimeStamp, format = "%m/%d/%Y %H:%M")

#subset into months of interest
Jul.dat <- subset(dat, dat$DateTime >= '2012-07-01' & dat$DateTime <= '2012-07-31')
Aug.dat <- subset(dat, dat$DateTime >= '2012-08-01' & dat$DateTime <= '2012-08-31')
Sept.dat <- subset(dat, dat$DateTime >= '2012-09-01' & dat$DateTime <= '2012-09-30')
Oct.dat <- subset(dat, dat$DateTime >= '2012-10-01' & dat$DateTime <= '2012-10-31')
Nov.dat <- subset(dat, dat$DateTime >= '2012-11-01' & dat$DateTime <= '2012-11-30')

# graph august and september
# for before and after Isaac
# do 3 axes: po4, depth, and salinity
cols <- RColorBrewer::brewer.pal(10, 'Paired')[c(1, 3, 5)]
par(mar=c(3, 0.2, 1, 1), oma=c(1,9.5,1,1), mfrow=c(1,2))
iscoplot3(Aug.dat, "Pre-spill tidal cycle", cols = cols, cex = 1.7, lwd = 1.5)
iscoplot2(Sept.dat, "Post-spill tidal cycle", cols = cols, cex = 1.7, lwd = 1.5)
@

<<Fig6, fig.width = 7, fig.height = 8, echo = FALSE, fig.cap = 'Boxplot summaries of monthly orthophosphate data for (A) time periods group by site and (B) sites grouped by time period. Boxplots within each panel that do not share a letter have significantly different concentrations. Sites are Bangs Lake (BL), Bangs North (BN), and Point aux Chenes (PC), and Bayou Cumbest (BC).  Time frames are event 1 acute (E1A), event 1 chronic (E1C), non-impact 1 (NI1), event 2 acute (E2A), event 2 chronic (E2C), and non-impact 2 (NI2).'>>=

data(nut_dat)
data(insites)
data(intimes)

# prep data for plots
toplo <- filter(nut_dat, nutrient == 'PO4F')
insites <- filter(insites, nutrient == 'PO4F') %>% 
  select(-length, -medval, -minval) %>% 
  rename(value = maxval) %>% 
  group_by(StationCode) %>% 
  mutate(value = max(value)) %>% 
  ungroup %>% 
  mutate(lets = paste0('italic(', lets, ')'))
intimes <- filter(intimes, nutrient == 'PO4F') %>% 
  select(-length, -medval, -minval) %>% 
  rename(value = maxval) %>% 
  group_by(TimeFrame) %>% 
  mutate(value = max(value)) %>% 
  ungroup %>% 
  mutate(lets = paste0('italic(', lets, ')'))

timeframes <- c('E1A', 'E1C', 'NI1', 'E2A', 'E2C', 'NI2')

# get nutrient/site/timeframe medians then merge with toplo for colors
meds <- group_by(toplo, StationCode, nutrient, TimeFrame) %>% 
  summarise(meds = median(value, na.rm = TRUE))

toplo <- left_join(toplo, meds, by = c('StationCode', 'nutrient', 'TimeFrame'))

ylab <- expression(paste('Orthophosphate (mg P/L)'))

# set correct factor levels
toplo$StationCode <- factor(toplo$StationCode, levels = c('BN', 'BL', 'PC', 'BC'))
insites$StationCode <- factor(insites$StationCode, levels = c('BN', 'BL', 'PC', 'BC'))
intimes$TimeFrame <- factor(intimes$TimeFrame, levels = c('E1A', 'E1C', 'NI1', 'E2A', 'E2C', 'NI2'))

# boxplot, within sites
p1 <- ggplot(toplo, aes(x = TimeFrame, y = value)) +
  geom_boxplot(aes(fill = meds), outlier.size = 1) + 
  geom_text(data = insites, aes(label = lets), nudge_y = 0.2, parse = T) + 
  facet_wrap(~ StationCode, scales = 'free_y') +
  scale_y_log10(ylab) +
  theme_bw() + 
  scale_fill_gradientn(colours = RColorBrewer::brewer.pal(9, 'BuGn')[3:9]) + 
  scale_x_discrete('Event') +
  theme(
    legend.position = 'none',
    strip.background = element_blank()
    ) + 
  ggtitle('(A) Within sites')

# boxplot, within time periods
p2 <- ggplot(toplo, aes(x = StationCode, y = value)) +
  geom_boxplot(aes(fill = meds), outlier.size = 1) + 
  geom_text(data = intimes, aes(label = lets), nudge_y = 0.2, parse = T) + 
  facet_wrap(~ TimeFrame, scales = 'free_y') +
  scale_y_log10(ylab) +
  theme_bw() + 
  scale_fill_gradientn(colours = RColorBrewer::brewer.pal(9, 'BuGn')[3:9]) + 
  scale_x_discrete('Site') +
  theme(
    legend.position = 'none',
    strip.background = element_blank()
    ) + 
  ggtitle('(B) Within time periods')

grid.arrange(p1, p2, ncol = 1)
@

<<Fig7, fig.width = 8, fig.height = 6, fig.cap = 'Boxplot summaries of nutrient data for sites grouped by time periods. Boxplots within each panel that do not share a letter have significantly different concentrations. Insufficient chlorophyll data were removed for E1A and E1C. Sites are Bangs Lake (BL), Bangs North (BN), and Point aux Chenes (PC), and Bayou Cumbest (BC).  Time frames are event 1 acute (E1A), event 1 chronic (E1C), non-impact 1 (NI1), event 2 acute (E2A), event 2 chronic (E2C), and non-impact 2 (NI2).', echo = FALSE>>=

data(nut_dat)
data(intimes)

# remove phosphorus, prep plot data
toplo <- filter(nut_dat, nutrient != 'PO4F') 
toplo$nutrient <- droplevels(toplo$nutrient)
intimes <- filter(intimes, nutrient != 'PO4F') %>% 
  select(-length, -medval, -minval) %>% 
  rename(value = maxval) %>% 
  group_by(nutrient) %>% 
  mutate(value = max(value)) %>% 
  ungroup %>% 
  mutate(
    lets = paste0('italic(', lets, ')'),
    StationCode = factor(StationCode, levels = c('BN', 'BL', 'PC', 'BC'))
    )

# get nutrient/site/timeframe medians then merge with toplo for colors
meds <- group_by(toplo, StationCode, nutrient, TimeFrame) %>% 
  summarise(meds = median(value, na.rm = TRUE))
meds <- split(meds, meds$nutrient)
meds <- lapply(meds, function(x){
  
  x$rnks <- scales::rescale(x$meds, c(0, 1))
  return(x)
  
  })
meds <- do.call('rbind', meds)

toplo <- left_join(toplo, meds, by = c('StationCode', 'nutrient', 'TimeFrame'))
toplo$StationCode <- factor(toplo$StationCode, levels = c('BN', 'BL', 'PC', 'BC'))
    
# setup facet labels
facet1_names <- list(
  'E1A' = 'E1A',
  'E1C' = 'E1C',
  'NI1' =  'NI1',
  'E2A' = 'E2A',
  'E2C' = 'E2C',
  'NI2' = 'NI2'
  )
facet2_names <- list(
  'NH4F' = expression(paste('Ammonium (mg/L)')), 
  'NO23F' = expression(paste('Nitrite + Nitrate (mg N/L)')),
  'CHLA_N' = expression(paste('Chlorophyll-a (ug/L)'))
  )

plot_labeller <- function(variable,value){
  if (variable=='TimeFrame')
    return(facet1_names[value])
  if (variable=='nutrient')
    return(facet2_names[value])
  }

# boxplot
p1 <- ggplot(toplo, aes(x = StationCode, y = value)) +
  geom_boxplot(aes(fill = rnks)) + 
  geom_text(data = intimes, aes(label = lets), nudge_y = 0.2, parse = T) + 
  facet_grid(nutrient ~ TimeFrame, scales = 'free_y', labeller = plot_labeller) +
  scale_y_log10() +
  theme_bw() + 
  theme(
    legend.position = 'none',
    strip.background = element_blank()
    ) + 
  scale_x_discrete('Event') +
  scale_fill_gradientn(colours = RColorBrewer::brewer.pal(9, 'BuGn')[3:9]) 
p1

@

<<Fig8, fig.width = 8, fig.height = 6, fig.cap = 'Boxplot summaries of nutrient data for time periods grouped by site. Boxplots within each panel that do not share a letter have significantly different concentrations. Insufficient chlorophyll data were removed for E1A and E1C. Sites are Bangs Lake (BL), Bangs North (BN), and Point aux Chenes (PC), and Bayou Cumbest (BC).  Time frames are event 1 acute (E1A), event 1 chronic (E1C), non-impact 1 (NI1), event 2 acute (E2A), event 2 chronic (E2C), and non-impact 2 (NI2).', echo = FALSE>>=

data(nut_dat)
data(insites)

# remove phosphorus, prep plot data
toplo <- filter(nut_dat, nutrient != 'PO4F') 
toplo$nutrient <- droplevels(toplo$nutrient)
insites <- filter(insites, nutrient != 'PO4F') %>% 
  select(-length, -medval, -minval) %>% 
  rename(value = maxval) %>% 
  group_by(nutrient) %>% 
  mutate(value = max(value)) %>% 
  ungroup %>% 
  mutate(
    lets = paste0('italic(', lets, ')'),
    StationCode = factor(StationCode, levels = c('BN', 'BL', 'PC', 'BC'))
    )

# get nutrient/site/timeframe medians then merge with toplo for colors
meds <- group_by(toplo, StationCode, nutrient, TimeFrame) %>% 
  summarise(meds = median(value, na.rm = TRUE))
meds <- split(meds, meds$nutrient)
meds <- lapply(meds, function(x){
  
  x$rnks <- scales::rescale(x$meds, c(0, 1))
  return(x)
  
  })
meds <- do.call('rbind', meds)

toplo <- left_join(toplo, meds, by = c('StationCode', 'nutrient', 'TimeFrame'))
toplo$StationCode <- factor(toplo$StationCode, levels = c('BN', 'BL', 'PC', 'BC'))
    
# setup facet labels
facet1_names <- list(
  'BN' = 'BN',
  'BL' = 'BL',
  'PC' =  'PC',
  'BC' = 'BC'
  )
facet2_names <- list(
  'NH4F' = expression(paste('Ammonium (mg/L)')), 
  'NO23F' = expression(paste('Nitrite + Nitrate (mg N/L)')),
  'CHLA_N' = expression(paste('Chlorophyll-a (ug/L)'))
  )

plot_labeller <- function(variable,value){
  if (variable=='StationCode')
    return(facet1_names[value])
  if (variable=='nutrient')
    return(facet2_names[value])
  }

# boxplot
p1 <- ggplot(toplo, aes(x = TimeFrame, y = value)) +
  geom_boxplot(aes(fill = rnks)) + 
  geom_text(data = insites, aes(label = lets), nudge_y = 0.2, parse = T) + 
  facet_grid(nutrient ~ StationCode, scales = 'free_y', labeller = plot_labeller) +
  scale_y_log10() +
  theme_bw() + 
  theme(
    legend.position = 'none',
    strip.background = element_blank()
    ) + 
  scale_x_discrete('Event') +
  scale_fill_gradientn(colours = RColorBrewer::brewer.pal(9, 'BuGn')[3:9]) 
p1

@

\clearpage

%%%%%%
% tables

% Table 1, time periods

\setcounter{table}{1}
% summary charactistics table
<<Table2, echo = FALSE>>=

data(nut_dat)
data(wq_dat)

# nutrient summary, uses cenmle for censored data
nut_dat <- select(nut_dat, StationCode, nutrient, value) %>% 
  rename(
    var = nutrient,
    val = value
  ) %>% 
  mutate(
    c_val = ifelse(val <= 0.01, T, F)
  ) %>% 
  group_by(StationCode, var) %>% 
  summarise(
    avev = mean(cenmle(val, c_val))[1],
    medv = median(cenmle(val, c_val)),
    stdv = sd(cenmle(val, c_val))[1],
    minv = min(val, na.rm = T), 
    maxv = max(val, na.rm = T)
  )

# wq summary
wq_dat <- select(wq_dat, StationCode, do_pct, sal, ph) %>% 
  gather('var', 'val', do_pct:ph) %>% 
  group_by(StationCode, var) %>% 
  summarise(
    avev  = mean(val, na.rm = T), 
    medv = median(val, na.rm = T), 
    stdv = sd(val, na.rm = T),
    minv = min(val, na.rm = T), 
    maxv = max(val, na.rm = T)
  )

# combine prep
totab <- rbind(wq_dat, nut_dat) %>% 
  select(var, StationCode, everything()) %>% 
  ungroup %>% 
  mutate(
    StationCode = factor(StationCode, levels = c('BN', 'BL', 'PC', 'BC', 'BH'))
    ) %>% 
  arrange(var, StationCode) %>% 
  as.data.frame(stringsAsFactors = F)

tab <- totab[, -c(1, 2)]
tab <- round(tab, 2)
rows <- totab[, 2]
cap <- 'Site summaries of water quality (hourly) and nutrient (monthly) observations from 2005 to 2015.  Units are mg L$^{-1}$ for all variables, except Chl-\\textit{a} as $\\mu$g L$^{-1}$, DO\\textit{sat} as percent, pH from 0-12, and salinity as psu. Nutrient summaries are based on maximum likelihood estimates for left-censored data and summary values less than the detection limit (0.01 mg/L) are estimated accordingly.  Sites are BC: Bayou Cumbest, BH: Bayou Heron (no nutrient data), BL: Bangs Lake, BN: Bangs North (no water quality data), and PC: Point aux Chenes.'
rgrps <- unique(totab$var) %>% 
  factor(., 
    levels = c('CHLA_N', 'do_pct', 'NH4F', 'NO23F', 'ph', 'PO4F', 'sal'), 
    labels = c('Chl-\\textit{a}', 'DO$_{sat}$', 'NH$_4^+$', 'NO$_2^-$/NO$_3^-$', 'pH', 'PO$_4^{3-}$', 'Salinity')
  ) %>% 
  as.character

latex(
  tab,
  file = '',
  rowlabel = 'Stations',
  caption = cap,
  caption.loc = 'top',
  rgroup = rgrps,
  n.rgroup = rep(4, 7),
  rowname = rows,
  colheads = c('Average', 'Median', 'St. Dev', 'Min', 'Max'),
  label = 'tab:summtab'
  )

@

\clearpage
% kendall tests, phosphate
<<Table3, echo = FALSE>>=
data(nut_dat)

trnds <- nut_dat %>% 
  na.omit %>% 
  mutate(
    mo = month(date), 
    yr = year(date), 
    TimeFrame = gsub('A|C', '', TimeFrame)
  ) %>% 
  filter(!TimeFrame %in% c('NI2') & nutrient %in% 'PO4F') %>% 
  select(TimeFrame, StationCode, nutrient, date, value, mo, yr) %>% 
  group_by(TimeFrame, StationCode, nutrient) %>% 
  nest %>% 
  mutate(
    sk_res = map(data, ~ kendallSeasonalTrendTest(value ~ mo + yr, .)), 
    tau = map(sk_res, ~ .$estimate[1]), 
    slope = map(sk_res, ~ .$estimate[2]),
    med = map(data, ~ median(.$value, na.rm = TRUE)), 
    ztest = map(sk_res, ~ .$p.value[2])
  ) %>% 
  select(-data, -sk_res) %>% 
  unnest %>% 
  mutate(
    perchg = 100 * slope/med, 
    perchg = sapply(perchg, form_fun),
    med = sapply(med, form_fun),
    tau = sapply(tau, form_fun),
    slope = sapply(slope, form_fun),
    ztest = sapply(ztest, p_ast),
    TimeFrame = factor(TimeFrame, 
      levels = c('E1', 'NI1', 'E2'), 
      labels = c('E1A, E1C', 'NI1', 'E2A, E2C')
    ), 
    StationCode = factor(StationCode, 
      levels = c('BN', 'BL', 'PC', 'BC')
    )
  ) %>% 
  tidyr::unite('tau', tau, ztest, sep = '') %>% 
  arrange(nutrient, TimeFrame, StationCode) %>% 
  group_by(nutrient) %>% 
  nest

nutnms <- c('PO$_4^{-3}$ (mg P/L)')
names(nutnms) <- c('PO4F')
      
for(nut in names(nutnms)){
    
  nut <- as.character(nut)
  tab <- filter(trnds, nutrient %in% nut) %>% 
    .$data %>% 
    .[[1]] %>% 
    data.frame
  
  rgrp <- as.character(tab[, 1])
  nrgrp <- as.numeric(table(rgrp))
  rgrp <- unique(rgrp)
  
  rows <- as.character(tab[, 2])
  cap <- paste0('Summary of ', nutnms[nut], ' trends for time periods with sufficient data.  Trends are based on seasonal Kendall tests, where $\\tau$ is the direction and strength of the trend, slope is the change per year, median is the median in the time period, and percent change is the slope divided by the median.  Sites are Bangs Lake (BL), Bangs North (BN), and Point aux Chenes (PC), and Bayou Cumbest (BC). Time periods are event 1 acute (E1A), event 1 chronic (E1C), non-impact 1 (NI1), event 2 acute (E2A), and event 2 chronic (E2C). *$p <$ 0.05; **$p <$ 0.005')
  tab <- tab[, -c(1, 2)]
  
  latex(
    tab,
    file = '',
    rowlabel = 'Time periods, sites',
    caption = cap,
    caption.loc = 'top',
    rgroup = rgrp,
    n.rgroup = nrgrp,
    rowname = rows,
    colheads = c('$\\tau$', 'slope', 'median', '\\% change'),
    label = paste0('tab:', nut, 'trnd')
    )
  # p <- paste(p, collapse = '\n')
  # 
  # cat(p)
  # 
}

@
\clearpage

% kendall tests, nh4, chla
<<Tables45, echo = FALSE>>=
data(nut_dat)

trnds <- nut_dat %>% 
  na.omit %>% 
  mutate(
    mo = month(date), 
    yr = year(date), 
    TimeFrame = gsub('A|C', '', TimeFrame)
  ) %>% 
  filter(!TimeFrame %in% c('NI2') & nutrient %in% c('NH4F', 'CHLA_N')) %>% 
  select(TimeFrame, StationCode, nutrient, date, value, mo, yr) %>% 
  group_by(TimeFrame, StationCode, nutrient) %>% 
  nest %>% 
  mutate(
    sk_res = map(data, ~ kendallSeasonalTrendTest(value ~ mo + yr, .)), 
    tau = map(sk_res, ~ .$estimate[1]), 
    slope = map(sk_res, ~ .$estimate[2]),
    med = map(data, ~ median(.$value, na.rm = TRUE)), 
    ztest = map(sk_res, ~ .$p.value[2])
  ) %>% 
  select(-data, -sk_res) %>% 
  unnest %>% 
  mutate(
    perchg = 100 * slope/med, 
    perchg = sapply(perchg, form_fun),
    med = sapply(med, form_fun),
    tau = sapply(tau, form_fun),
    slope = sapply(slope, form_fun),
    ztest = sapply(ztest, p_ast),
    TimeFrame = factor(TimeFrame, 
      levels = c('E1', 'NI1', 'E2'), 
      labels = c('E1A, E1C', 'NI1', 'E2A, E2C')
    ), 
    StationCode = factor(StationCode, 
      levels = c('BN', 'BL', 'PC', 'BC')
    )
  ) %>% 
  tidyr::unite('tau', tau, ztest, sep = '') %>% 
  arrange(nutrient, TimeFrame, StationCode) %>% 
  group_by(nutrient) %>% 
  nest

nutnms <- c('NH$_4^+$ (mg N/L)', 'Chl-\\textit{a} ($\\mu$g/L)')
names(nutnms) <- c('NH4F', 'CHLA_N')
      
for(nut in names(nutnms)){
    
  nut <- as.character(nut)
  tab <- filter(trnds, nutrient %in% nut) %>% 
    .$data %>% 
    .[[1]] %>% 
    data.frame
  
  rgrp <- as.character(tab[, 1])
  nrgrp <- as.numeric(table(rgrp))
  rgrp <- unique(rgrp)
  
  rows <- as.character(tab[, 2])
  cap <- paste0('Summary of ', nutnms[nut], ' trends for time periods with sufficient data.  Trends are based on seasonal Kendall tests, where $\\tau$ is the direction and strength of the trend, slope is the change per year, median is the median in the time period, and percent change is the slope divided by the median. Sites are Bangs Lake (BL), Bangs North (BN), and Point aux Chenes (PC), and Bayou Cumbest (BC). Time periods are event 1 acute (E1A), event 1 chronic (E1C), non-impact 1 (NI1), event 2 acute (E2A), and event 2 chronic (E2C). *$p <$ 0.05; **$p <$ 0.005')
  tab <- tab[, -c(1, 2)]
  
  latex(
    tab,
    file = '',
    rowlabel = 'Time periods, sites',
    caption = cap,
    caption.loc = 'top',
    rgroup = rgrp,
    n.rgroup = nrgrp,
    rowname = rows,
    colheads = c('$\\tau$', 'slope', 'median', '\\% change'),
    label = paste0('tab:', nut, 'trnd')
    )

}

@

\end{document}