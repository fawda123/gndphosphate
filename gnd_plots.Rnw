\documentclass[letterpaper,12pt]{article}
\usepackage[top=1in,bottom=1in,left=1in,right=1in]{geometry}
\usepackage{setspace}
\usepackage[colorlinks=true,urlcolor=blue,citecolor=blue,linkcolor=blue]{hyperref}
\usepackage{indentfirst}
\usepackage{multirow}
\usepackage{booktabs}
\usepackage[final]{animate}
\usepackage{graphicx}
\usepackage{verbatim}
\usepackage{rotating}
\usepackage{tabularx}
\usepackage{array}
\usepackage{subfig} 
\usepackage[noae]{Sweave}
\usepackage{cleveref}
\usepackage[figureposition=bottom]{caption}
\usepackage{paralist}
\usepackage{acronym}
\usepackage{outlines}
\usepackage{pdflscape}

%for supplemental figures/tables
\newcommand{\beginsupplement}{%
        \setcounter{table}{0}
        \renewcommand{\thetable}{S\arabic{table}}%
        \setcounter{figure}{0}
        \renewcommand{\thefigure}{S\arabic{figure}}%
     }

% knitr options
<<setup, echo = FALSE, cache = F>>=
library(knitr)
# set global chunk options
opts_chunk$set(fig.path = 'figs/', fig.align = 'center', fig.show = 'hold', message = F, results = 'asis', dev = c('pdf', 'tiff'), dev.args = list(pdf = list(family = 'serif'), tiff = list(compression = 'lzw', family = 'serif')), dpi = 600, fig.pos = '!ht', warning = F, tangle = TRUE, 
  fig.process = function(x) {
  x2 = sub('-\\d+([.][a-z]+)$', '\\1', x)
  if (file.rename(x, x2)) x2 else x
  })
options(replace.assign = TRUE, width = 90)
@

<<echo = FALSE, message = FALSE>>=
# libraries to use
library(ggord)
library(dplyr)
library(tidyr)
library(ggplot2)
library(stargazer)
library(SWMPr)
library(agricolae)
library(reshape2)
library(Hmisc)
library(gridExtra)
library(nlme)
library(vegan)
library(multcompView)
library(grid)

# load data
data(wq_dat)
data(met_dat)
data(nut_dat)

# get ggplot legend
g_legend<-function(a.gplot){
  tmp <- ggplot_gtable(ggplot_build(a.gplot))
  leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
  legend <- tmp$grobs[[leg]]
  return(legend)}
@

\begin{document}

\setcounter{figure}{1}
\setcounter{table}{1}

\begin{landscape}
\centering\vspace*{\fill}
<<Fig2, fig.width = 9, fig.height = 5, out.width = '1.3\\textwidth', echo = FALSE, fig.cap = 'Time series of total precipitation, salinity, pH, and phosphate for Bangs Lake, Grand Bay reserve.  All observations are daily averages, excluding phosphate which was sampled monthly.  Vertical green bars indicate a heavy rain event in April 2005 and hurricane Isaac in August 2012.  Salinity and pH include a loess smooth to reduce variability. Orthophosphate is colored by event categories in relation to the vertical green bars.  E1A: event 1 acute, E1C: event 1 chronic, NI1: non-impact 1, E2A: event 2 acute, E2C: event 2 chronic, and NI2: non-impact 2.'>>=
# ts plots for BL
# first get cumulative daily precipitation for met
# then combine wq and met, take daily ave, make long form

data(met_supp)

# met process for totprcp
met_proc <- mutate(met_dat, datetimestamp = as.Date(datetimestamp)) %>% 
  rename(date = datetimestamp) %>% 
  group_by(date, TimeFrame) %>% 
  summarise(totprcp = sum(totprcp, na.rm = TRUE)) %>% 
  as.data.frame
met_proc <- rbind(met_proc, met_supp) %>% 
  arrange(date)

# nutrients process for BL phosphorus 
nut_proc <- filter(nut_dat, nutrient == 'PO4F' & StationCode == 'BL') %>% 
  select(-nutrient, -value, -stat_nut, -StationCode) %>% 
  rename(logP = logvalue)
  
# combine wq with met and nut
toplo_wq <- filter(wq_dat, StationCode == 'BL') %>% 
  select(-StationCode, -depth) %>% 
  mutate(datetimestamp = as.Date(datetimestamp)) %>% 
  rename(date = datetimestamp) %>% 
  group_by(date, TimeFrame) %>% 
  summarise_each(funs(mean(., na.rm = TRUE))) %>% 
  full_join(met_proc, by = c('date', 'TimeFrame')) %>%
  gather('variable', 'value', sal:totprcp) %>% 
  mutate(variable = factor(variable, 
    levels = c('totprcp', 'sal', 'ph'),
    labels = c('Total precipitation (mm/d)', 'Salinity (ppt)', 'pH')
    )) %>% 
  rename(Event = TimeFrame)

# combine wq with met and nut
toplo_nut <- gather(nut_proc, 'variable', 'value', logP) %>% 
  mutate(variable = factor(variable, 
    levels = c('logP'),
    labels = c('Orthophosphate (mg/L)') # still in log units but axis scaling will show this as back-transformed
    )) %>% 
  rename(Event = TimeFrame) %>% 
  data.frame %>% 
  na.omit

# event dates
events <- c('2005-04-11', '2012-08-01')
events <- as.Date(events)

mars1 <- grid::unit(c(0, 0, 0, 0), 'mm')
mars2 <- grid::unit(c(-4, 0, 0, 0), 'mm')
lims <- as.Date(c('2004-01-01', '2015-12-31'))

# the plots, a shitty mess
p1 <- ggplot(toplo_wq, aes(x = date, y = value)) + 
  geom_line() +
  geom_vline(xintercept = as.numeric(events), colour = 'lightgreen', alpha = 0.6, size = 3) +
  geom_line() +
  facet_wrap(~variable, scales = 'free_y', ncol = 1) +
  theme_bw() +
  theme(
    axis.title.x = element_blank(), 
    axis.title.y = element_blank(), 
    axis.text.x = element_blank(), 
    axis.ticks.x = element_blank(),
    plot.margin = mars1
    ) +
  scale_x_date(limits = lims) + 
  stat_smooth(data = filter(toplo_wq, variable %in% c('Salinity (ppt)', 'pH')),
    method = 'loess', span = 0.1, n = 2000, se = FALSE, size = 1, colour = 'lightblue')
p2 <- ggplot(toplo_nut, aes(x = date, y = 10 ^ value)) + 
  geom_point(alpha = 0.8, size = 3, 
    aes(colour = Event)) +
  geom_vline(xintercept = as.numeric(events), colour = 'lightgreen', alpha = 0.6, size = 3) +
  facet_wrap(~variable, scales = 'free_y') +
  theme_bw() +
  theme(
    axis.title.x = element_blank(), 
    axis.title.y = element_blank(),
    plot.margin = mars2
    ) + 
  scale_x_date(limits = lims) + 
  scale_y_log10() 
pleg <- g_legend(p2)
p2 <- p2 + theme(legend.position = 'none')

# align
pA <- ggplot_gtable(ggplot_build(p1))
pB <- ggplot_gtable(ggplot_build(p2))
maxWidth = unit.pmax(pA$widths[2:3], pB$widths[2:3])

# Set the widths
pA$widths[2:3] <- maxWidth
pB$widths[2:3] <- maxWidth

grid.arrange(
  arrangeGrob(pA, pB, ncol = 1, heights = c(3, 1.1)),
  pleg, 
  ncol = 2, 
  widths = c(1, 0.1)
)

@
\end{landscape}
\clearpage

<<Fig3, fig.width = 9, fig.height = 6, echo = FALSE, fig.cap = 'Time series of daily precipitation, salinity, and pH for Bangs Lake, Grand Bay reserve.  Precipitation data are daily totals from the Pascagoula International Airport.  Salinity and pH data were collected at 15 minute time steps.  Green shading indicates period of high precipitation for a heavy rain event in 2005 (left, March 31\\textsuperscript{st} to April 1\\textsuperscript{st}) and hurricane Isaac in 2012 (right, August 28\\textsuperscript{th} to 30\\textsuperscript{th}).  Red shading for the first event indicates the date of documented phosphorus spill.  E1A: event 1 acute, E2A: event 2 acute.'>>=
# ts plots for BL, wq only expanded about the events
# first get cumulative daily precipitation for met
# then combine wq and met, take daily ave, make long form

data(met_supp_e1)
data(met_supp_e2)
met_supp_all <- rbind(met_supp_e1, met_supp_e2)

# met process for totprcp
met_proc <- select(met_dat, datetimestamp, totprcp)
  
# combine wq with met and nut
toplo <- filter(wq_dat, StationCode == 'BL') %>% 
  select(-StationCode, -depth) %>% 
  left_join(., met_supp_all, by = c('datetimestamp', 'TimeFrame')) %>% 
  select(datetimestamp, TimeFrame, sal, ph, totprcp) %>% 
  gather('variable', 'value', sal:totprcp) %>% 
  mutate(variable = factor(variable, 
    levels = c('totprcp', 'sal', 'ph'),
    labels = c('Total precipitation (cm/d)', 'Salinity (ppt)', 'pH')
    )) %>% 
  rename(Event = TimeFrame)

# precip dates
events1 <- c('2005-03-31', '2005-04-01')
events1 <- as.POSIXct(events1, format = '%Y-%m-%d', tz = 'America/Regina')
events1 <- data.frame(xmin = events1[1], xmax = events1[2], ymin = -Inf, ymax = Inf)
events2 <- c('2012-08-28', '2012-08-30')
events2 <- as.POSIXct(events2, format = '%Y-%m-%d', tz = 'America/Regina')
events2 <- data.frame(xmin = events2[1], xmax = events2[2], ymin = -Inf, ymax = Inf)

spill <- as.POSIXct('2005-04-14', format = '%Y-%m-%d', tz = 'America/Regina')

# subset +- one month from each event
subdts <- c('2005-03-20 0:0', '2005-05-01 0:0', '2012-08-20 0:0', '2012-10-01 0:0')
subdts <- as.POSIXct(subdts, format = '%Y-%m-%d %H:%M', tz = 'America/Regina')
toplo1 <- filter(toplo, datetimestamp >= subdts[1] & datetimestamp <= subdts[2]) %>% 
  mutate(Event = 'E1A')
toplo2 <- filter(toplo, datetimestamp >= subdts[3] & datetimestamp <= subdts[4]) %>% 
  mutate(Event = 'E2A')

# plots
p1 <- ggplot(toplo1) + 
  geom_rect(data = events1, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
    fill = 'lightgreen', alpha = 0.6) + 
  geom_vline(xintercept = as.numeric(spill), colour = 'tomato', alpha = 0.6, size = 1) +
  geom_line(aes(x = datetimestamp, y = value)) +
  geom_bar(data = na.omit(toplo1[toplo1$variable == 'Total precipitation (cm/d)', ]), 
    aes(x = datetimestamp, y = 0.1 + value),
    stat = 'identity') + 
  facet_wrap(variable ~ Event, scales = 'free', ncol = 1) +
  theme_bw() +
  theme(
    axis.title.x = element_blank(), 
    axis.title.y = element_blank()
  )
p2 <- ggplot(toplo2) + 
  geom_rect(data = events2, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
    fill = 'lightgreen', alpha = 0.6) + 
  geom_line(aes(x = datetimestamp, y = value)) +
  geom_bar(data = na.omit(toplo2[toplo2$variable == 'Total precipitation (cm/d)', ]), 
    aes(x = datetimestamp, y = 0.1 + value),
    stat = 'identity') + 
  facet_wrap(variable ~ Event, scales = 'free', ncol = 1) +
  theme_bw() +
  theme(
    axis.title.x = element_blank(), 
    axis.title.y = element_blank()
  )
grid.arrange(p1, p2, ncol = 2)

@
\clearpage

<<Fig4, fig.width = 7.5, fig.height = 6, echo = FALSE, fig.cap = 'Monthly phosphate time series at Bangs North (BN), Bangs Lake (BL), Point aux Chenes (PC), and Bayou Cumbest (BC) sites at Grand Bay. Vertical green bars indicate a heavy rain event in April 2005 and hurricane Isaac in August 2012.'>>=

data(nut_dat)

toplo <- filter(nut_dat, nutrient == 'PO4F')

timeframes <- c('E1A', 'E1C', 'NI1', 'E2A', 'E2C', 'NI2')

ylab <- expression(paste('Orthophosphate (mg ', L^-1, ')'))

toplo$StationCode <- factor(toplo$StationCode, levels = c('BN', 'BL', 'PC', 'BC'))

# event dates
events <- c('2005-04-01', '2012-08-01')
events <- as.Date(events)

# boxplot
p1 <- ggplot(toplo, aes(x = date, y = value)) +
  geom_line() + 
  geom_point() +
  facet_wrap(~ StationCode, ncol = 1, scales = 'free_y') +
  scale_y_log10(ylab) +
  geom_vline(xintercept = as.numeric(events), colour = 'lightgreen', alpha = 0.6, size = 3) +
  theme_bw() +
  theme(
    legend.position = 'none', 
    axis.title.x = element_blank()
  )
p1
@
\clearpage

<<Fig5, fig.width = 7.5, fig.height = 5, echo = FALSE, fig.cap = 'Boxplot summaries by event of monthly orthophosphate data at Bangs Lake (BL), Bangs North (BN), and Point aux Chenes (PC), and Bayou Cumbest (BC) sites in Grand Bay.  Boxes represent the interquartile range (IQR, 25\\textsuperscript{th} to 75\\textsuperscript{th} percentile) with the median as the middle horizonal line.  Outliers are present beyond whiskers (1.5$\\cdot$IQR). Boxes are shaded by medians between sites.  See \\cref{tab:orthtab1} for a numerical summary. E1A: event 1 acute, E1C: event 1 chronic, NI1: non-impact 1, E2A: event 2 acute, E2C: event 2 chronic, and NI2: non-impact 2.'>>=

data(nut_dat)

toplo <- filter(nut_dat, nutrient == 'PO4F')

timeframes <- c('E1A', 'E1C', 'NI1', 'E2A', 'E2C', 'NI2')

# get nutrient/site/timeframe medians then merge with toplo for colors
meds <- group_by(toplo, StationCode, nutrient, TimeFrame) %>% 
  summarise(meds = median(value, na.rm = TRUE))

toplo <- left_join(toplo, meds, by = c('StationCode', 'nutrient', 'TimeFrame'))

ylab <- expression(paste('Orthophosphate (mg ', L^-1, ')'))

toplo$StationCode <- factor(toplo$StationCode, levels = c('BL', 'BN', 'PC', 'BC'))

# boxplot
p1 <- ggplot(toplo, aes(x = TimeFrame, y = value)) +
  geom_boxplot(aes(fill = meds)) + 
  facet_wrap(~ StationCode, scales = 'free_y') +
  scale_y_log10(ylab) +
  theme_bw() + 
  scale_fill_gradientn(colours = RColorBrewer::brewer.pal(9, 'BuGn')[3:9]) + 
  scale_x_discrete('Event') +
  theme(legend.position = 'none')
p1
@
\clearpage

% within site eval
<<orthtab1, echo = FALSE>>=
data(nut_dat)

toplo <- filter(nut_dat, nutrient == 'PO4F')

timeframes <- c('E1A', 'E1C', 'NI1', 'E2A', 'E2C', 'NI2')

# split data by unique station/nutrient variable
sep_data <- split(toplo, toplo$stat_nut)

res <- lapply(sep_data, function(x){

  # pairwise comparisons with mann-whitney (wilcox)
  grps <- unique(x$TimeFrame)
  grps <- combn(grps, 2)
  pval <- rep(NA, ncol(grps))
  for(col in 1:ncol(grps)){
    grp <- x$TimeFrame %in% grps[, col, drop = TRUE]
    res <- wilcox.test(logvalue ~ TimeFrame, data = x[grp, ], exact = FALSE, 
      alternative = 'two.sided')
    pval[col] <- res$p.value
  }
  
  # adjust p-values using holm sequential bonferroni 
  pval <- p.adjust(pval, method = 'holm')
  
  # pval as t/f using bonferroni correction
  vecs <- rep(FALSE, ncol(grps))
  vecs[pval < 0.05] <- TRUE
  names(vecs) <- paste(grps[1, ], grps[2, ], sep = '-')
  
  # group membership based on multiple comparisons
  lets <- multcompLetters(vecs)$Letters
  
  # standard summary stats
  sums <- group_by(x, TimeFrame) %>% 
    summarise(
      length = length(na.omit(value)),
      medval = median(value, na.rm = TRUE),
      minval = min(value, na.rm = TRUE),
      maxval = max(value, na.rm = TRUE)
      )
  
  data.frame(lets, sums[, -1])
  
  })

# combine results for plotting
res <- do.call('rbind', res) %>% 
  mutate(
    stat_nut = gsub('PO4F\\.', '', row.names(.))
  ) %>% 
  separate(stat_nut, c('StationCode', 'TimeFrame'), sep = ' ') %>% 
  select(StationCode, TimeFrame, lets, length, medval, minval, maxval) %>% 
  mutate(
    TimeFrame = factor(TimeFrame, levels = c('E1A', 'E1C', 'NI1', 'E2A', 'E2C', 'NI2')),
    StationCode = factor(StationCode, levels = c('BL', 'BN', 'PC', 'BC'))
    ) %>% 
  arrange(StationCode, TimeFrame)

tab <- res[, -c(1, 2)]
tab[, -1] <- round(tab[, -1], 2)
rows <- res[, 2]
cap <- 'Within site comparisons  of monthly orthophosphate data for each time frame at Grand Bay.  Values are within-group summaries of sample size, median, and ranges for orthophosphate by station and time frame.  Result letters indicate time frames within each station that were not significantly different based on multiple comparisons with Mann-Whitney rank sum tests.  P-values were adjusted using the sequential Bonferroni method to reduce the probability of Type I errors. Sites are BC: Bayou Cumbest, BL: Bangs Lake, BN: Bangs North, and PC: Point aux Chenes.  Time frames are E1A: event 1 acute, E1C: event 1 chronic, NI1: non-impact 1, E2A: event 2 acute, E2C: event 2 chronic, and NI2: non-impact 2.'

latex(
  tab,
  file = '',
  rowlabel = 'Site',
  caption = cap,
  caption.loc = 'top',
  rgroup = unique(res$StationCode),
  n.rgroup = rep(6, 4),
  rowname = rows,
  colheads = c('Result', 'n', 'Median', 'Min', 'Max'),
  label = 'tab:orthtab1'
  )

@
\clearpage

% between site eval
<<orthtab2, echo = FALSE>>=
data(nut_dat)

toplo <- filter(nut_dat, nutrient == 'PO4F') %>% 
  select(-stat_nut)

# split data by unique station/nutrient variable
sep_data <- split(toplo, toplo$TimeFrame)

res <- lapply(sep_data, function(x){

  # pairwise comparisons with mann-whitney (wilcox)
  grps <- unique(x$StationCode)
  grps <- combn(grps, 2)
  pval <- rep(NA, ncol(grps))
  for(col in 1:ncol(grps)){
    grp <- x$StationCode %in% grps[, col, drop = TRUE]
    res <- wilcox.test(logvalue ~ StationCode, data = x[grp, ], exact = FALSE, 
      alternative = 'two.sided')
    pval[col] <- res$p.value
  }
  
  # adjust p-values using holm sequential bonferroni 
  pval <- p.adjust(pval, method = 'holm')
  
  # pval as t/f using bonferroni correction
  vecs <- rep(FALSE, ncol(grps))
  vecs[pval < 0.05] <- TRUE
  names(vecs) <- paste(grps[1, ], grps[2, ], sep = '-')
  
  # group membership based on multiple comparisons
  lets <- multcompLetters(vecs)$Letters
  
  # standard summary stats
  sums <- group_by(x, StationCode) %>% 
    summarise(
      length = length(na.omit(value)),
      medval = median(value, na.rm = TRUE),
      minval = min(value, na.rm = TRUE),
      maxval = max(value, na.rm = TRUE)
      )
  
  data.frame(lets, sums[, -1])
  
  })

# combine results for plotting
res <- do.call('rbind', res) %>% 
  mutate(
    time_stat = row.names(.)
  ) %>% 
  separate(time_stat, c('TimeFrame', 'StationCode'), sep = '\\.') %>% 
  select(TimeFrame, StationCode, lets, length, medval, minval, maxval) %>% 
  mutate(
    TimeFrame = factor(TimeFrame, levels = c('E1A', 'E1C', 'NI1', 'E2A', 'E2C', 'NI2')),
    StationCode = factor(StationCode, levels = c('BL', 'BN', 'PC', 'BC'))
    ) %>% 
  arrange(TimeFrame, StationCode)

tab <- res[, -c(1, 2)]
tab[, -1] <- round(tab[, -1], 2)
rows <- res[, 2]
cap <- 'Within time frame comparisons of monthly orthophosphate data at Grand Bay.  Values are within-group summaries of sample size, median, and ranges for orthophosphate by time frame and station.  Result letters indicate stations within each time frame that were not significantly different based on multiple comparisons with Mann-Whitney rank sum tests.  P-values were adjusted using the sequential Bonferroni method to reduce the probability of Type I errors. Sites are BC: Bayou Cumbest, BL: Bangs Lake, BN: Bangs North, and PC: Point aux Chenes.  Time frames are E1A: event 1 acute, E1C: event 1 chronic, NI1: non-impact 1, E2A: event 2 acute, E2C: event 2 chronic, and NI2: non-impact 2.'

latex(
  tab,
  file = '',
  rowlabel = 'Site',
  caption = cap,
  caption.loc = 'top',
  rgroup = unique(res$TimeFrame),
  n.rgroup = rep(4, 6),
  rowname = rows,
  colheads = c('Result', 'n', 'Median', 'Min', 'Max'),
  label = 'tab:orthtab2'
  )

@
\clearpage

% supplements
\beginsupplement

<<FigS1, fig.width = 8, fig.height = 6, fig.cap = 'Boxplot summaries by event of nutrient data at Bayou Cumbest (BC), Bangs Lake (BL), Bangs North (BN), and Point aux Chenes (PC) sites at Grand Bay.  Boxes represent the interquartile range (IQR, 25\\textsuperscript{th} to 75\\textsuperscript{th} percentile) with the median as the middle horizontal line.  Boxes are colored by relative median nutrients between sites.  Outliers are present beyond whiskers (1.5$\\cdot$IQR). See \\cref{tab:ammontab,tab:tntab,tab:chltab} for numerical summaries.  Insufficient chlorophyll data were removed for E1A and E1C. E1A: event 1 acute, E1C: event 1 chronic, NI1: non-impact 1, E2A: event 2 acute, E2C: event 2 chronic, and NI2: non-impact 2.', echo = FALSE>>=

data(nut_dat)
data(wq_dat)

# get ph data on monthly time step
wq_dat <- setstep(wq_dat, date_col = 'datetimestamp', timestep = 'months')

# remove BN, phosphorus
toplo <- filter(nut_dat, nutrient != 'PO4F') 
toplo$nutrient <- droplevels(toplo$nutrient)

# get nutrient/site/timeframe medians then merge with toplo for colors
meds <- group_by(toplo, StationCode, nutrient, TimeFrame) %>% 
  summarise(meds = median(value, na.rm = TRUE))
meds <- split(meds, meds$nutrient)
meds <- lapply(meds, function(x){
  
  x$rnks <- scales::rescale(x$meds, c(0, 1))
  return(x)
  
  })
meds <- do.call('rbind', meds)

toplo <- left_join(toplo, meds, by = c('StationCode', 'nutrient', 'TimeFrame'))

# setup facet labels
facet1_names <- list(
  'BC' = 'BC', 
  'BL' = 'BL',
  'BN' = 'BN',
  'PC' =  'PC'
  )
facet2_names <- list(
  'NH4F' = expression(paste('Ammonium (mg', L^-1, ')')), 
  'NO23F' = expression(paste('Nitrite + Nitrate (mg', L^-1, ')')),
  'CHLA_N' = expression(paste('Chlorophyll-a (ug', L^-1, ')'))
  )

plot_labeller <- function(variable,value){
  if (variable=='StationCode')
    return(facet1_names[value])
  if (variable=='nutrient')
    return(facet2_names[value])
  }

# boxplot
p1 <- ggplot(toplo, aes(x = TimeFrame, y = value)) +
  geom_boxplot(aes(fill = rnks)) + 
  facet_grid(nutrient ~ StationCode, scales = 'free_y', labeller = plot_labeller) +
  scale_y_log10() +
  theme_bw() + 
  theme(legend.position = 'none') + 
  scale_x_discrete('Event') +
  scale_fill_gradientn(colours = RColorBrewer::brewer.pal(9, 'BuGn')[3:9]) 
p1

@
\clearpage

<<ammontab, echo = FALSE>>=
data(nut_dat)

toplo <- filter(nut_dat, nutrient == 'NH4F')

timeframes <- c('E1A', 'E1C', 'NI1', 'E2A', 'E2C', 'NI2')

# split data by unique station/nutrient variable
sep_data <- split(toplo, toplo$stat_nut)

res <- lapply(sep_data, function(x){

  # pairwise comparisons with mann-whitney (wilcox)
  grps <- unique(x$TimeFrame)
  grps <- combn(grps, 2)
  pval <- rep(NA, ncol(grps))
  for(col in 1:ncol(grps)){
    grp <- x$TimeFrame %in% grps[, col, drop = TRUE]
    res <- wilcox.test(logvalue ~ TimeFrame, data = x[grp, ], exact = FALSE, 
      alternative = 'two.sided')
    pval[col] <- res$p.value
  }
  
  # adjust p-values using holm sequential bonferroni 
  pval <- p.adjust(pval, method = 'holm')
  
  # pval as t/f using bonferroni correction
  vecs <- rep(FALSE, ncol(grps))
  vecs[pval < 0.05] <- TRUE
  names(vecs) <- paste(grps[1, ], grps[2, ], sep = '-')
  
  # group membership based on multiple comparisons
  lets <- multcompLetters(vecs)$Letters
  
  # standard summary stats
  sums <- group_by(x, TimeFrame) %>% 
    summarise(
      length = length(na.omit(value)),
      medval = median(value, na.rm = TRUE),
      minval = min(value, na.rm = TRUE),
      maxval = max(value, na.rm = TRUE)
      )
  
  data.frame(lets, sums[, -1])
  
  })

# combine results for plotting
res <- do.call('rbind', res) %>% 
  mutate(
    stat_nut = gsub('NH4F\\.', '', row.names(.))
  ) %>% 
  separate(stat_nut, c('StationCode', 'TimeFrame'), sep = ' ') %>% 
  select(StationCode, TimeFrame, lets, length, medval, minval, maxval) %>% 
  mutate(
    TimeFrame = factor(TimeFrame, levels = c('E1A', 'E1C', 'NI1', 'E2A', 'E2C', 'NI2')),
    StationCode = factor(StationCode, levels = c('BL', 'BN', 'PC', 'BC'))
    ) %>% 
  arrange(StationCode, TimeFrame)

tab <- res[, -c(1, 2)]
tab[, -1] <- round(tab[, -1], 2)
rows <- res[, 2]
cap <- 'Within site comparisons  of monthly ammonium data for each time frame at Grand Bay.  Values are within-group summaries of sample size, median, and ranges for ammonium by station and time frame.  Result letters indicate time frames within each station that were not significantly different based on multiple comparisons with Mann-Whitney rank sum tests.  P-values were adjusted using the sequential Bonferroni method to reduce the probability of Type I errors. Sites are BC: Bayou Cumbest, BL: Bangs Lake, BN: Bangs North, and PC: Point aux Chenes.  Time frames are E1A: event 1 acute, E1C: event 1 chronic, NI1: non-impact 1, E2A: event 2 acute, E2C: event 2 chronic, and NI2: non-impact 2.'

latex(
  tab,
  file = '',
  rowlabel = 'Site',
  caption = cap,
  caption.loc = 'top',
  rgroup = unique(res$StationCode),
  n.rgroup = rep(6, 4),
  rowname = rows,
  colheads = c('Result', 'n', 'Median', 'Min', 'Max'),
  label = 'tab:ammontab'
  )
  
@
\clearpage

% between site eval
<<ammontab2, echo = FALSE>>=
data(nut_dat)

toplo <- filter(nut_dat, nutrient == 'NH4F') %>% 
  select(-stat_nut)

# split data by unique station/nutrient variable
sep_data <- split(toplo, toplo$TimeFrame)

res <- lapply(sep_data, function(x){

  # pairwise comparisons with mann-whitney (wilcox)
  grps <- unique(x$StationCode)
  grps <- combn(grps, 2)
  pval <- rep(NA, ncol(grps))
  for(col in 1:ncol(grps)){
    grp <- x$StationCode %in% grps[, col, drop = TRUE]
    res <- wilcox.test(logvalue ~ StationCode, data = x[grp, ], exact = FALSE, 
      alternative = 'two.sided')
    pval[col] <- res$p.value
  }
  
  # adjust p-values using holm sequential bonferroni 
  pval <- p.adjust(pval, method = 'holm')
  
  # pval as t/f using bonferroni correction
  vecs <- rep(FALSE, ncol(grps))
  vecs[pval < 0.05] <- TRUE
  names(vecs) <- paste(grps[1, ], grps[2, ], sep = '-')
  
  # group membership based on multiple comparisons
  lets <- multcompLetters(vecs)$Letters
  
  # standard summary stats
  sums <- group_by(x, StationCode) %>% 
    summarise(
      length = length(na.omit(value)),
      medval = median(value, na.rm = TRUE),
      minval = min(value, na.rm = TRUE),
      maxval = max(value, na.rm = TRUE)
      )
  
  data.frame(lets, sums[, -1])
  
  })

# combine results for plotting
res <- do.call('rbind', res) %>% 
  mutate(
    time_stat = row.names(.)
  ) %>% 
  separate(time_stat, c('TimeFrame', 'StationCode'), sep = '\\.') %>% 
  select(TimeFrame, StationCode, lets, length, medval, minval, maxval) %>% 
  mutate(
    TimeFrame = factor(TimeFrame, levels = c('E1A', 'E1C', 'NI1', 'E2A', 'E2C', 'NI2')),
    StationCode = factor(StationCode, levels = c('BL', 'BN', 'PC', 'BC'))
    ) %>% 
  arrange(TimeFrame, StationCode)

tab <- res[, -c(1, 2)]
tab[, -1] <- round(tab[, -1], 2)
rows <- res[, 2]
cap <- 'Within time frame comparisons of monthly ammonium data at Grand Bay.  Values are within-group summaries of sample size, median, and ranges for ammonium by time frame and station.  Result letters indicate stations within each time frame that were not significantly different based on multiple comparisons with Mann-Whitney rank sum tests.  P-values were adjusted using the sequential Bonferroni method to reduce the probability of Type I errors. Sites are BC: Bayou Cumbest, BL: Bangs Lake, BN: Bangs North, and PC: Point aux Chenes.  Time frames are E1A: event 1 acute, E1C: event 1 chronic, NI1: non-impact 1, E2A: event 2 acute, E2C: event 2 chronic, and NI2: non-impact 2.'

latex(
  tab,
  file = '',
  rowlabel = 'Site',
  caption = cap,
  caption.loc = 'top',
  rgroup = unique(res$TimeFrame),
  n.rgroup = rep(4, 6),
  rowname = rows,
  colheads = c('Result', 'n', 'Median', 'Min', 'Max'),
  label = 'tab:ammontab2'
  )

@
\clearpage

<<tntab, echo = FALSE>>=
data(nut_dat)

toplo <- filter(nut_dat, nutrient == 'NO23F')

timeframes <- c('E1A', 'E1C', 'NI1', 'E2A', 'E2C', 'NI2')

# split data by unique station/nutrient variable
sep_data <- split(toplo, toplo$stat_nut)

res <- lapply(sep_data, function(x){

  # pairwise comparisons with mann-whitney (wilcox)
  grps <- unique(x$TimeFrame)
  grps <- combn(grps, 2)
  pval <- rep(NA, ncol(grps))
  for(col in 1:ncol(grps)){
    grp <- x$TimeFrame %in% grps[, col, drop = TRUE]
    res <- wilcox.test(logvalue ~ TimeFrame, data = x[grp, ], exact = FALSE, 
      alternative = 'two.sided')
    pval[col] <- res$p.value
  }
  
  # adjust p-values using holm sequential bonferroni 
  pval <- p.adjust(pval, method = 'holm')
  
  # pval as t/f using bonferroni correction
  vecs <- rep(FALSE, ncol(grps))
  vecs[pval < 0.05] <- TRUE
  names(vecs) <- paste(grps[1, ], grps[2, ], sep = '-')
  
  # group membership based on multiple comparisons
  lets <- multcompLetters(vecs)$Letters
  
  # standard summary stats
  sums <- group_by(x, TimeFrame) %>% 
    summarise(
      length = length(na.omit(value)),
      medval = median(value, na.rm = TRUE),
      minval = min(value, na.rm = TRUE),
      maxval = max(value, na.rm = TRUE)
      )
  
  data.frame(lets, sums[, -1])
  
  })

# combine results for plotting
res <- do.call('rbind', res) %>% 
  mutate(
    stat_nut = gsub('NO23F\\.', '', row.names(.))
  ) %>% 
  separate(stat_nut, c('StationCode', 'TimeFrame'), sep = ' ') %>% 
  select(StationCode, TimeFrame, lets, length, medval, minval, maxval) %>% 
  mutate(
    TimeFrame = factor(TimeFrame, levels = c('E1A', 'E1C', 'NI1', 'E2A', 'E2C', 'NI2')),
    StationCode = factor(StationCode, levels = c('BL', 'BN', 'PC', 'BC'))
    ) %>% 
  arrange(StationCode, TimeFrame)

tab <- res[, -c(1, 2)]
tab[, -1] <- round(tab[, -1], 2)
rows <- res[, 2]
cap <- 'Within site comparisons  of monthly nitrogen (nitrate, nitrite) data for each time frame at Grand Bay.  Values are within-group summaries of sample size, median, and ranges for nitrogen by station and time frame.  Result letters indicate time frames within each station that were not significantly different based on multiple comparisons with Mann-Whitney rank sum tests.  P-values were adjusted using the sequential Bonferroni method to reduce the probability of Type I errors. Sites are BC: Bayou Cumbest, BL: Bangs Lake, BN: Bangs North, and PC: Point aux Chenes.  Time frames are E1A: event 1 acute, E1C: event 1 chronic, NI1: non-impact 1, E2A: event 2 acute, E2C: event 2 chronic, and NI2: non-impact 2.'

latex(
  tab,
  file = '',
  rowlabel = 'Site',
  caption = cap,
  caption.loc = 'top',
  rgroup = unique(res$StationCode),
  n.rgroup = rep(6, 4),
  rowname = rows,
  colheads = c('Result', 'n', 'Median', 'Min', 'Max'),
  label = 'tab:tntab'
  )
  
@
\clearpage

% between site eval
<<tntab2, echo = FALSE>>=
data(nut_dat)

toplo <- filter(nut_dat, nutrient == 'NO23F') %>% 
  select(-stat_nut)

# split data by unique station/nutrient variable
sep_data <- split(toplo, toplo$TimeFrame)

res <- lapply(sep_data, function(x){

  # pairwise comparisons with mann-whitney (wilcox)
  grps <- unique(x$StationCode)
  grps <- combn(grps, 2)
  pval <- rep(NA, ncol(grps))
  for(col in 1:ncol(grps)){
    grp <- x$StationCode %in% grps[, col, drop = TRUE]
    res <- wilcox.test(logvalue ~ StationCode, data = x[grp, ], exact = FALSE, 
      alternative = 'two.sided')
    pval[col] <- res$p.value
  }
  
  # adjust p-values using holm sequential bonferroni 
  pval <- p.adjust(pval, method = 'holm')
  
  # pval as t/f using bonferroni correction
  vecs <- rep(FALSE, ncol(grps))
  vecs[pval < 0.05] <- TRUE
  names(vecs) <- paste(grps[1, ], grps[2, ], sep = '-')
  
  # group membership based on multiple comparisons
  lets <- multcompLetters(vecs)$Letters
  
  # standard summary stats
  sums <- group_by(x, StationCode) %>% 
    summarise(
      length = length(na.omit(value)),
      medval = median(value, na.rm = TRUE),
      minval = min(value, na.rm = TRUE),
      maxval = max(value, na.rm = TRUE)
      )
  
  data.frame(lets, sums[, -1])
  
  })

# combine results for plotting
res <- do.call('rbind', res) %>% 
  mutate(
    time_stat = row.names(.)
  ) %>% 
  separate(time_stat, c('TimeFrame', 'StationCode'), sep = '\\.') %>% 
  select(TimeFrame, StationCode, lets, length, medval, minval, maxval) %>% 
  mutate(
    TimeFrame = factor(TimeFrame, levels = c('E1A', 'E1C', 'NI1', 'E2A', 'E2C', 'NI2')),
    StationCode = factor(StationCode, levels = c('BL', 'BN', 'PC', 'BC'))
    ) %>% 
  arrange(TimeFrame, StationCode)

tab <- res[, -c(1, 2)]
tab[, -1] <- round(tab[, -1], 2)
rows <- res[, 2]
cap <- 'Within time frame comparisons of monthly nitrogen (nitrate, nitrite) data at Grand Bay.  Values are within-group summaries of sample size, median, and ranges for nitrogen by time frame and station.  Result letters indicate stations within each time frame that were not significantly different based on multiple comparisons with Mann-Whitney rank sum tests.  P-values were adjusted using the sequential Bonferroni method to reduce the probability of Type I errors. Sites are BC: Bayou Cumbest, BL: Bangs Lake, BN: Bangs North, and PC: Point aux Chenes.  Time frames are E1A: event 1 acute, E1C: event 1 chronic, NI1: non-impact 1, E2A: event 2 acute, E2C: event 2 chronic, and NI2: non-impact 2.'

latex(
  tab,
  file = '',
  rowlabel = 'Site',
  caption = cap,
  caption.loc = 'top',
  rgroup = unique(res$TimeFrame),
  n.rgroup = rep(4, 6),
  rowname = rows,
  colheads = c('Result', 'n', 'Median', 'Min', 'Max'),
  label = 'tab:tntab2'
  )

@
\clearpage

<<chltab, echo = FALSE>>=
data(nut_dat)

timeframes <- c('NI1', 'E2A', 'E2C', 'NI2')

toplo <- filter(nut_dat, nutrient == 'CHLA_N' & TimeFrame %in% timeframes) %>% 
  mutate(TimeFrame = factor(TimeFrame, labels = timeframes, levels = timeframes))

# split data by unique station/nutrient variable
sep_data <- split(toplo, toplo$stat_nut)

res <- lapply(sep_data, function(x){

  # pairwise comparisons with mann-whitney (wilcox)
  grps <- unique(x$TimeFrame)
  grps <- combn(grps, 2)
  pval <- rep(NA, ncol(grps))
  for(col in 1:ncol(grps)){
    grp <- x$TimeFrame %in% grps[, col, drop = TRUE]
    res <- wilcox.test(logvalue ~ TimeFrame, data = x[grp, ], exact = FALSE, 
      alternative = 'two.sided')
    pval[col] <- res$p.value
  }
  
  # adjust p-values using holm sequential bonferroni 
  pval <- p.adjust(pval, method = 'holm')
  
  # pval as t/f using bonferroni correction
  vecs <- rep(FALSE, ncol(grps))
  vecs[pval < 0.05] <- TRUE
  names(vecs) <- paste(grps[1, ], grps[2, ], sep = '-')
  
  # group membership based on multiple comparisons
  lets <- multcompLetters(vecs)$Letters
  
  # standard summary stats
  sums <- group_by(x, TimeFrame) %>% 
    summarise(
      length = length(na.omit(value)),
      medval = median(value, na.rm = TRUE),
      minval = min(value, na.rm = TRUE),
      maxval = max(value, na.rm = TRUE)
      )
  
  data.frame(lets, sums[, -1])
  
  })

# combine results for plotting
res <- do.call('rbind', res) %>% 
  mutate(
    stat_nut = gsub('CHLA_N\\.', '', row.names(.))
  ) %>% 
  separate(stat_nut, c('StationCode', 'TimeFrame'), sep = ' ') %>% 
  select(StationCode, TimeFrame, lets, length, medval, minval, maxval) %>% 
  mutate(
    TimeFrame = factor(TimeFrame, levels = c('NI1', 'E2A', 'E2C', 'NI2')),
    StationCode = factor(StationCode, levels = c('BL', 'BN', 'PC', 'BC'))
    ) %>% 
  arrange(StationCode, TimeFrame)

tab <- res[, -c(1, 2)]
tab[, -1] <- round(tab[, -1], 2)
rows <- res[, 2]
cap <- 'Within site comparisons  of monthly chlorophyll data for each time frame at Grand Bay.  Values are within-group summaries of sample size, median, and ranges for chlorophyll by station and time frame.  Result letters indicate time frames within each station that were not significantly different based on multiple comparisons with Mann-Whitney rank sum tests.  P-values were adjusted using the sequential Bonferroni method to reduce the probability of Type I errors. Sites are BC: Bayou Cumbest, BL: Bangs Lake, BN: Bangs North, and PC: Point aux Chenes.  Time frames are NI1: non-impact 1, E2A: event 2 acute, E2C: event 2 chronic, and NI2: non-impact 2.'

latex(
  tab,
  file = '',
  rowlabel = 'Site',
  caption = cap,
  caption.loc = 'top',
  rgroup = unique(res$StationCode),
  n.rgroup = rep(4, 4),
  rowname = rows,
  colheads = c('Result', 'n', 'Median', 'Min', 'Max'),
  label = 'tab:chltab'
  )
  
@
\clearpage

% between site eval
<<chltab2, echo = FALSE>>=
data(nut_dat)

timeframes <- c('NI1', 'E2A', 'E2C', 'NI2')

toplo <- filter(nut_dat, nutrient == 'CHLA_N' & TimeFrame %in% timeframes) %>% 
  mutate(TimeFrame = factor(TimeFrame, labels = timeframes, levels = timeframes))

# split data by unique station/nutrient variable
sep_data <- split(toplo, toplo$TimeFrame)

res <- lapply(sep_data, function(x){

  # pairwise comparisons with mann-whitney (wilcox)
  grps <- unique(x$StationCode)
  grps <- combn(grps, 2)
  pval <- rep(NA, ncol(grps))
  for(col in 1:ncol(grps)){
    grp <- x$StationCode %in% grps[, col, drop = TRUE]
    res <- wilcox.test(logvalue ~ StationCode, data = x[grp, ], exact = FALSE, 
      alternative = 'two.sided')
    pval[col] <- res$p.value
  }
  
  # adjust p-values using holm sequential bonferroni 
  pval <- p.adjust(pval, method = 'holm')
  
  # pval as t/f using bonferroni correction
  vecs <- rep(FALSE, ncol(grps))
  vecs[pval < 0.05] <- TRUE
  names(vecs) <- paste(grps[1, ], grps[2, ], sep = '-')
  
  # group membership based on multiple comparisons
  lets <- multcompLetters(vecs)$Letters
  
  # standard summary stats
  sums <- group_by(x, StationCode) %>% 
    summarise(
      length = length(na.omit(value)),
      medval = median(value, na.rm = TRUE),
      minval = min(value, na.rm = TRUE),
      maxval = max(value, na.rm = TRUE)
      )
  
  data.frame(lets, sums[, -1])
  
  })

# combine results for plotting
res <- do.call('rbind', res) %>% 
  mutate(
    time_stat = row.names(.)
  ) %>% 
  separate(time_stat, c('TimeFrame', 'StationCode'), sep = '\\.') %>% 
  select(TimeFrame, StationCode, lets, length, medval, minval, maxval) %>% 
  mutate(
    TimeFrame = factor(TimeFrame, levels = c('NI1', 'E2A', 'E2C', 'NI2')),
    StationCode = factor(StationCode, levels = c('BL', 'BN', 'PC', 'BC'))
    ) %>% 
  arrange(TimeFrame, StationCode)

tab <- res[, -c(1, 2)]
tab[, -1] <- round(tab[, -1], 2)
rows <- res[, 2]
cap <- 'Within time frame comparisons of monthly chlorophyll data at Grand Bay.  Values are within-group summaries of sample size, median, and ranges for chlorophyll by time frame and station.  Result letters indicate stations within each time frame that were not significantly different based on multiple comparisons with Mann-Whitney rank sum tests.  P-values were adjusted using the sequential Bonferroni method to reduce the probability of Type I errors. Sites are BC: Bayou Cumbest, BL: Bangs Lake, BN: Bangs North, and PC: Point aux Chenes.  Time frames are NI1: non-impact 1, E2A: event 2 acute, E2C: event 2 chronic, and NI2: non-impact 2.'

latex(
  tab,
  file = '',
  rowlabel = 'Site',
  caption = cap,
  caption.loc = 'top',
  rgroup = unique(res$TimeFrame),
  n.rgroup = rep(4, 4),
  rowname = rows,
  colheads = c('Result', 'n', 'Median', 'Min', 'Max'),
  label = 'tab:chltab2'
  )

@
\clearpage

\end{document}