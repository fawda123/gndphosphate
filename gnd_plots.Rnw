\documentclass[letterpaper,12pt]{article}
\usepackage[top=1in,bottom=1in,left=1in,right=1in]{geometry}
\usepackage{setspace}
\usepackage[colorlinks=true,urlcolor=blue,citecolor=blue,linkcolor=blue]{hyperref}
\usepackage{indentfirst}
\usepackage{multirow}
\usepackage{booktabs}
\usepackage[final]{animate}
\usepackage{graphicx}
\usepackage{verbatim}
\usepackage{rotating}
\usepackage{tabularx}
\usepackage{array}
\usepackage{subfig} 
\usepackage[noae]{Sweave}
\usepackage{cleveref}
\usepackage[figureposition=bottom]{caption}
\usepackage{paralist}
\usepackage{acronym}
\usepackage{outlines}
\usepackage{pdflscape}

% knitr options
<<setup, echo = FALSE, cache = F>>=
library(knitr)
# set global chunk options
opts_chunk$set(fig.path = 'figs/', fig.align = 'center', fig.show = 'hold',message = F, results = 'asis',dev = 'pdf',dev.args=list(family='serif'), fig.pos = '!ht', warning = F, tangle = TRUE)
options(replace.assign=TRUE,width=90)
@

<<echo = FALSE, message = FALSE>>=
# libraries to use
library(ggord)
library(dplyr)
library(tidyr)
library(ggplot2)
library(SWMPr)
library(agricolae)
library(reshape2)
library(Hmisc)
library(gridExtra)

# load data
load('wq_dat.RData')
load('met_dat.RData')
load('nut_dat.RData')
@

\begin{document}

\begin{landscape}
\centering\vspace*{\fill}
<<tsplot, fig.width = 9, fig.height = 5.25, out.height = '5in', echo = FALSE, fig.cap = 'Time series of total precipitation, salinity, pH, and phosphate for Bangs Lake, Grand Bay reserve.  Vertical green bars indicate a heavy rain event in April 2005 and hurricane Isaac in August 2012.  Salinity and pH include a loess smooth to reduce variability. Orthophosphate is colored by event categories in relation to the vertical green bars.  E1A: event 1 acute, E1C: event 1 chronic, NI: non-impact, E2A: event 2 acute, E2C: event 2 chronic.'>>=
# ts plots for BL
# first get cumulative daily precipitation for met
# then combine wq and met, take daily ave, make long form

load(file = 'met_supp.RData')

# met process for totprcp
met_proc <- mutate(met_dat, datetimestamp = as.Date(datetimestamp)) %>% 
  rename(date = datetimestamp) %>% 
  group_by(date, TimeFrame) %>% 
  summarise(totprcp = sum(totprcp, na.rm = TRUE))
met_proc <- rbind(met_proc, met_supp) %>% 
  arrange(date)

# nutrients process for BL phosphorus 
nut_proc <- filter(nut_dat, nutrient == 'PO4F' & StationCode == 'BL') %>% 
  select(-nutrient, -value, -stat_nut, -StationCode) %>% 
  rename(logP = logvalue)
  
# combine wq with met and nut
toplo <- filter(wq_dat, StationCode == 'BL') %>% 
  select(-StationCode) %>% 
  mutate(datetimestamp = as.Date(datetimestamp)) %>% 
  rename(date = datetimestamp) %>% 
  group_by(date, TimeFrame) %>% 
  summarise_each(funs(mean(., na.rm = TRUE))) %>% 
  full_join(met_proc, by = c('date', 'TimeFrame')) %>% 
  full_join(nut_proc, by = c('date', 'TimeFrame')) %>% 
  gather('variable', 'value', sal:logP) %>% 
  mutate(variable = factor(variable, 
    levels = c('totprcp', 'sal', 'ph', 'logP'),
    labels = c('Total precipitation (mm/d)', 'Salinity (ppt)', 'pH', 'log-Orthophosphate (mg/L)')
    )) %>% 
  rename(Event = TimeFrame)

# event dates
events <- c('2005-04-01', '2012-08-01')
events <- as.Date(events)

# the plot
p <- ggplot(toplo, aes(x = date, y = value)) + 
  geom_line() +
  geom_vline(xintercept = as.numeric(events), colour = 'lightgreen', alpha = 0.6, size = 3) +
  geom_line() +
  geom_point(data = filter(toplo, variable == 'log-Orthophosphate (mg/L)'), alpha = 0.8, size = 3, 
    aes(colour = Event)) + 
  facet_wrap(~variable, scales = 'free_y', ncol = 1) +
  theme_bw() +
  theme(
    axis.title.x = element_blank(), 
    axis.title.y = element_blank()
    ) +
  stat_smooth(data = filter(toplo, variable %in% c('Salinity (ppt)', 'pH')),
    method = 'loess', span = 0.1, n = 2000, se = FALSE, size = 1, colour = 'lightblue')
p
@
\end{landscape}
\clearpage

<<tsplotexp, fig.width = 9, fig.height = 6, echo = FALSE, fig.cap = 'Time series of total precipitation, salinity, and pH for Bangs Lake, Grand Bay reserve.  Plots show six month windows centered (green line) around a heavy rain event in April 2005 and hurricane Isaac in August 2012.  E1A: event 1 acute, E2A: event 2 acute.'>>=
# ts plots for BL, wq only expanded about the events
# first get cumulative daily precipitation for met
# then combine wq and met, take daily ave, make long form

load(file = 'met_supp.RData')

# met process for totprcp
met_proc <- mutate(met_dat, datetimestamp = as.Date(datetimestamp)) %>% 
  rename(date = datetimestamp) %>% 
  group_by(date, TimeFrame) %>% 
  summarise(totprcp = sum(totprcp, na.rm = TRUE))
met_proc <- rbind(met_proc, met_supp) %>% 
  arrange(date)
  
# combine wq with met and nut
toplo <- filter(wq_dat, StationCode == 'BL') %>% 
  select(-StationCode) %>% 
  mutate(datetimestamp = as.Date(datetimestamp)) %>% 
  rename(date = datetimestamp) %>% 
  group_by(date, TimeFrame) %>% 
  summarise_each(funs(mean(., na.rm = TRUE))) %>% 
  full_join(met_proc, by = c('date', 'TimeFrame')) %>% 
  gather('variable', 'value', sal:totprcp) %>% 
  mutate(variable = factor(variable, 
    levels = c('totprcp', 'sal', 'ph'),
    labels = c('Total precipitation (mm/d)', 'Salinity (ppt)', 'pH')
    )) %>% 
  rename(Event = TimeFrame)

# event dates
events <- c('2005-04-01', '2012-09-01')
events <- rep(as.Date(events), 3)

# subset +- one month from each event
subdts <- c('2005-01-01', '2005-07-01', '2012-06-01', '2012-12-01')
subdts <- as.Date(subdts, format = '%Y-%m-%d')
toplo1 <- filter(toplo, date >= subdts[1] & date <= subdts[2]) %>% 
  mutate(Event = 'E1A')
toplo2 <- filter(toplo, date >= subdts[3] & date <= subdts[4]) %>% 
  mutate(Event = 'E2A')

# plots
p1 <- ggplot(toplo1, aes(x = date, y = value)) + 
  geom_line() +
  geom_vline(xintercept = as.numeric(events[1]), colour = 'lightgreen', alpha = 0.6, size = 2) +
  geom_line() +
  facet_wrap(variable ~ Event, scales = 'free', ncol = 1) +
  theme_bw() +
  theme(
    axis.title.x = element_blank(), 
    axis.title.y = element_blank()
  )
p2 <- ggplot(toplo2, aes(x = date, y = value)) + 
  geom_line() +
  geom_vline(xintercept = as.numeric(events[2]), colour = 'lightgreen', alpha = 0.6, size = 2) +
  geom_line() +
  facet_wrap(variable ~ Event, scales = 'free', ncol = 1) +
  theme_bw() +
  theme(
    axis.title.x = element_blank(), 
    axis.title.y = element_blank()
  )

grid.arrange(p1, p2, ncol = 2)

@
\clearpage

<<tukey, fig.width = 8.5, fig.height = 3, echo = FALSE, fig.cap = 'Boxplot summaries by event of monthly orthophosphate data at Bayou Cumbest (BC), Bangs Lake (BL), and Point aux Chenes (PC) sites in Grand Bay.  Letters indicate events with significantly different events based on Tukey multiple comparison analysis within each site.  Boxes represent the interquartile range (IQR, 25\\textsuperscript{th} to 75\\textsuperscript{th} percentile) with the median as the middle horizonal line.  Outliers are present beyond whiskers (1.5$\\cdot$IQR). Boxes are shaded by medians between sites.  E1A: event 1 acute, E1C: event 1 chronic, NI: non-impact, E2A: event 2 acute, E2C: event 2 chronic.'>>=

load(file = 'nut_dat.RData')

toplo <- filter(nut_dat, StationCode != 'BN' & nutrient == 'PO4F')

timeframes <- c('E1A', 'E1C', 'NI', 'E2A', 'E2C')

# split data by unique station/nutrient variable
sep_data <- split(toplo, toplo$stat_nut)

# run a Tukey multiple comparison for each station, nutrient variable combo
res <- lapply(sep_data, function(x){

  mod <- aov(logvalue ~ TimeFrame, data = x)
  tuk_mod <- HSD.test(mod, 'TimeFrame', group = T)
  grps <- tuk_mod$groups
  grps$trt <- gsub('[[:space:]].*$', '', grps$trt)
  grps
  
  })

# combine results for plotting
res <- do.call('rbind', res) %>% 
  mutate(
    stat_nut = gsub('\\.[0-9]', '', row.names(.)),
    TimeFrame = trt
  ) %>% 
  separate(stat_nut, c('StationCode', 'nutrient'), sep = ' ')
ylocs <- data.frame(nutrient = c('PO4F'), ylims = c(10))
res <- left_join(res, ylocs, by = 'nutrient')
res$TimeFrame <- factor(res$trt, levels = timeframes, labels = timeframes)

# get nutrient/site/timeframe medians then merge with toplo for colors
meds <- group_by(toplo, StationCode, nutrient, TimeFrame) %>% 
  summarise(meds = median(value, na.rm = TRUE))

toplo <- left_join(toplo, meds, by = c('StationCode', 'nutrient', 'TimeFrame'))

ylab <- expression(paste('Orthophosphate (mg ', L^-1, ')'))

# boxplot
p1 <- ggplot(toplo, aes(x = TimeFrame, y = value)) +
  geom_boxplot(aes(fill = meds)) + 
  facet_grid(~ StationCode, scales = 'free_y') +
  scale_y_log10(ylab) +
  theme_bw() + 
  scale_fill_gradientn(colours = RColorBrewer::brewer.pal(9, 'BuGn')[3:9]) + 
  geom_text(data = res, aes(x = TimeFrame, y = ylims, label = M)) + 
  scale_x_discrete('Event') +
  theme(legend.position = 'none')
p1
@
\clearpage

<<phvsal1, fig.width = 9, fig.height = 6, echo = FALSE, fig.cap = 'Scatterplots of pH versus salinity for each of the time frames, grouped by station.  Observations are daily averages from the continuous time series. E1A: event 1 acute, E1C: event 1 chronic, NI: non-impact, E2A: event 2 acute, E2C: event 2 chronic.'>>=

# select BL, BC, PC, split by station
wq_proc <- filter(wq_dat, StationCode %in% c('BL', 'PC', 'BC')) %>% 
  mutate(datetimestamp = as.Date(datetimestamp)) %>% 
  rename(date = datetimestamp) %>% 
  group_by(date, StationCode, TimeFrame) %>% 
  summarise_each(funs(mean(., na.rm = TRUE))) %>% 
  rename(Station = StationCode)

p1 <- ggplot(wq_proc, aes(x = sal, y = ph, colour = Station, group = Station)) + 
  geom_point(alpha = 0.6, size = 4) + 
  theme_bw() + 
  scale_x_continuous('Salinity (ppt)') + 
  scale_y_continuous('pH') +
  theme(legend.position = c(0.83, 0.25)) + 
  facet_wrap(~TimeFrame)
p1 
@
\clearpage

<<phvsal2, fig.width = 9, fig.height = 3, echo = FALSE, fig.cap = 'Scatterplots of pH versus salinity for one month following the two acute exposure events (E1A, E2A) and 2010 during the non-impact (NI) time frame.  Values are thirty-minute observations at each station. E1A: event 1 acute, NI: non-impact, E2A: event 2 acute.'>>=

# select BL, BC, PC, split by station
wq_proc <- filter(wq_dat, StationCode %in% c('BL', 'PC', 'BC')) %>% 
  split(., .$StationCode)

# get all obs within one month of the beginning of each time frame
wq_proc <- lapply(wq_proc, function(x){
  
  # get within a time period from epochs
  sel_dates <- as.POSIXct(
    c('04-01-2005 0:0', '05-01-2005 0:0', '01-01-2010 0:0', '01-01-2011 0:0', 
      '9-01-2012 0:0', '10-01-2012 0:0'), 
    format = '%m-%d-%Y %H:%M', tz = 'America/Regina'
    )
  inds <- with(x, 
      datetimestamp >= sel_dates[1] & datetimestamp <= sel_dates[2] |
      datetimestamp >= sel_dates[3] & datetimestamp <= sel_dates[4] |
      datetimestamp >= sel_dates[5] & datetimestamp <= sel_dates[6]
    )

  x[inds, ]
})

# recombine for plotting
wq_proc <- do.call('rbind', wq_proc) %>% 
  data.frame(., row.names = 1:nrow(.)) %>% 
  filter(TimeFrame %in% c('E1A', 'NI', 'E2A')) %>% 
  rename(Station = StationCode) %>% 
  mutate(TimeFrame = factor(TimeFrame, levels = c('E1A', 'NI', 'E2A'), 
    labels = c('E1A (one month)', 'NI (one year)', 'E2A (one month)')
  ))

p <- ggplot(wq_proc, aes(x = sal, y = ph, colour = Station, group = Station)) + 
  geom_point(alpha = 0.4, size = 2) + 
  theme_bw() + 
  scale_x_continuous('Salinity (ppt)') + 
  scale_y_continuous('pH') +
  facet_wrap(~TimeFrame)
p 
@
\clearpage

<<ccfwq, echo = FALSE, eval = TRUE>>=
# pre-process wq for stations, timeframe and equal lags
wq_proc <- filter(wq_dat, StationCode %in% c('BL', 'PC', 'BC')) %>% 
  filter(TimeFrame %in% c('E1A', 'E2A')) %>% 
  rename(Station = StationCode) %>% 
  filter(strftime(datetimestamp, '%M') %in% c('00', '30')) # this has to be done to make lags valid

#ccf functions
wq_ccf <- function(dat_in, stats){
  
  # filter dat_in for station data, reformat for analysis
  toproc <- filter(dat_in, Station %in% stats) %>% 
    gather(variable, value, sal:ph) %>% 
    spread(Station, value) %>% 
    mutate(TimeFrame = factor(TimeFrame, levels = c('E1A', 'E2A')))
  toproc <- split(toproc, f = list(toproc$TimeFrame, toproc$variable))
  
  # ccf for timeframe, wq var combos
  toproc <- lapply(toproc, function(x){
    cors <- ccf(x[, stats[1]], x[, stats[2]], plot = FALSE, na.action = na.pass)
    ind <- which.max(cors$acf)
    out <- with(cors, c(lag[ind], acf[ind]))
    names(out) <- c('lag', 'cor')
    return(out)
  })
  
  return(toproc)
  
}

# get station combos
combs <- combn(unique(wq_proc$Station), 2, simplify = F)

# get ccf results
wqres <- lapply(combs, function(x) wq_ccf(wq_proc, x))
combs <- unlist(lapply(combs, paste, collapse = ' - '))
names(wqres) <- combs

# format for table
wqres <- lapply(wqres, function(x) do.call('rbind', x)) %>% 
  melt(.) %>% 
  separate(Var1, c('Event', 'wqvar')) %>% 
  unite('comb', Event, Var2) %>% 
  spread(comb, value)
  
nms <- c('wqvar', 'L1', 'E1A_lag', 'E1A_cor', 'E2A_lag', 'E2A_cor')
wqres <- wqres[, nms]
  
# table output
totab <- wqres[, -c(1:2)]
totab <- round(totab, 2)
names(totab) <- c('Lag', 'Correlation', 'Lag', 'Correlation')

cap.val <- 'Results of cross-correlation analyses comparing water quality time series between sites at Grand Bay during the two acute event periods.  Values for pH and salinity (ppt) are the lags in the compared time series between sites at which the maximum correlation was observed.  Negative lags indicate observations were leading at the first site relative to the second, whereas positive lags indicate observations lagged at the first site relative to the second.  One lag is thirty minutes.'
rgroups <- unique(wqres$wqvar) %>% 
  factor(., levels = c('ph', 'sal'), labels = c('pH', 'Salinity'))

foot.val <- '\\footnotesize BC: Bayou Cumbest, BL: Bangs Lake, PC: Point aux Chenes' 

latex( 
  totab,
  file = '',
  rowlabel = 'Site comparisons',
  caption = cap.val,
  caption.loc = 'top',
  rgroup = rgroups,
  n.rgroup = rep(3, 2),
  cgroup = c('First acute event (E1A)', 'Second acute event (E2A)'),
  n.cgroup = c(2, 2),
  rowname = wqres$L1,
  label = 'tab:ccfwq',
  insert.bottom = foot.val,
  col.just = c('r', 'c', 'r', 'c')
  )

@
\clearpage

<<ccfnut, echo = FALSE, eval = TRUE>>=
# pre-process nut for stations, timeframe
nut_proc <- filter(nut_dat, StationCode %in% c('BL', 'PC', 'BC')) %>% 
  filter(TimeFrame %in% c('E1A', 'E2A')) %>% 
  rename(Station = StationCode) %>% 
  select(-stat_nut, -value)

#ccf functions
nut_ccf <- function(dat_in, stats){
  
  # filter dat_in for station data, reformat for analysis
  toproc <- filter(dat_in, Station %in% stats) %>% 
    spread(Station, logvalue) %>% 
    mutate(TimeFrame = factor(TimeFrame, levels = c('E1A', 'E2A')))
  toproc <- split(toproc, f = list(toproc$TimeFrame, toproc$nutrient))
  
  # ccf for timeframe, wq var combos
  toproc <- lapply(toproc, function(x){
    cors <- ccf(x[, stats[1]], x[, stats[2]], plot = FALSE, na.action = na.pass)
    ind <- which.max(cors$acf)
    out <- with(cors, c(lag[ind], acf[ind]))
    names(out) <- c('lag', 'cor')
    return(out)
  })

  return(toproc)
  
}

# get station combos
combs <- combn(unique(wq_proc$Station), 2, simplify = F)

# get ccf results
nutres <- lapply(combs, function(x) nut_ccf(nut_proc, x))
combs <- unlist(lapply(combs, paste, collapse = ' - '))
names(nutres) <- combs

# format for table
nutres <- lapply(nutres, function(x) do.call('rbind', x)) %>% 
  melt(.) %>% 
  separate(Var1, c('Event', 'nutvar'), sep = '\\.') %>% 
  unite('comb', Event, Var2) %>% 
  spread(comb, value)
  
nms <- c('nutvar', 'L1', 'E1A_lag', 'E1A_cor', 'E2A_lag', 'E2A_cor')
nutres <- nutres[, nms]
  
# table output
totab <- nutres[, -c(1:2)]
totab <- round(totab, 2)
names(totab) <- c('Lag', 'Correlation', 'Lag', 'Correlation')

cap.val <- 'Results of cross-correlation analyses comparing nutrient time series between sites at Grand Bay during the two acute event periods.  Values are the lags for each nutrient varialbe in the compared time series between sites at which the maximum correlation was observed.  Negative lags indicate observations were leading at the first site relative to the second, whereas positive lags indicate observations lagged at the first site relative to the second.  One lag is one month.'
rgroups <- unique(nutres$nutvar) %>% 
  factor(., levels = c('CHLA_N', 'NH4F', 'NO23F', 'PO4F'), 
    labels = c('Chlorophyll a', 'Ammonium', 'Nitrite + Nitrate', 'Orthophosphate')
  )

foot.val <- '\\footnotesize BC: Bayou Cumbest, BL: Bangs Lake, PC: Point aux Chenes' 

latex( 
  totab,
  file = '',
  rowlabel = 'Site comparisons',
  caption = cap.val,
  caption.loc = 'top',
  rgroup = rgroups,
  n.rgroup = rep(3, 4),
  cgroup = c('First acute event (E1A)', 'Second acute event (E2A)'),
  n.cgroup = rep(2, 2),
  rowname = nutres$L1,
  label = 'tab:ccfnut',
  insert.bottom = foot.val, 
  col.just = c('r', 'c', 'r', 'c')
  )


@
\clearpage

% appendix boxplots
<<boxplt_all, fig.width = 8, fig.height = 6,, fig.cap = 'Boxplot summaries by event of nutrient data at Bayou Cumbest (BC), Bangs Lake (BL), and Point aux Chenes (PC) sites at Grand Bay.  Letters indicate significantly different events based on Tukey multiple comparison analyses for each unique site and nutrient value combination.  Boxes represent the interquartile range (IQR, 25\\textsuperscript{th} to 75\\textsuperscript{th} percentile) with the median as the middle horizonal line.  Boxes are colored by relative median nutrients between sites.  Outliers are present beyond whiskers (1.5$\\cdot$IQR). E1A: event 1 acute, E1C: event 1 chronic, NI: non-impact, E2A: event 2 acute, E2C: event 2 chronic.', echo = FALSE>>=

load(file = 'nut_dat.RData')

# remove BN, phosphorus
toplo <- filter(nut_dat, StationCode != 'BN' & nutrient != 'PO4F') 
toplo$nutrient <- droplevels(toplo$nutrient)

timeframes <- c('E1A', 'E1C', 'NI', 'E2A', 'E2C')

# split data by unique station/nutrient variable
sep_data <- split(toplo, toplo$stat_nut)

# run a Tukey multiple comparison for each station, nutrient variable combo
res <- lapply(sep_data, function(x){

  mod <- aov(logvalue ~ TimeFrame, data = x)
  tuk_mod <- HSD.test(mod, 'TimeFrame', group = T)
  grps <- tuk_mod$groups
  grps$trt <- gsub('[[:space:]].*$', '', grps$trt)
  grps
  
  })

# combine results for plotting
res <- do.call('rbind', res) %>% 
  mutate(
    stat_nut = gsub('\\.[0-9]', '', row.names(.)),
    TimeFrame = trt
  ) %>% 
  separate(stat_nut, c('StationCode', 'nutrient'), sep = ' ')
ylocs <- data.frame(nutrient = c('PO4F', 'NH4F', 'NO23F', 'CHLA_N'), ylims = c(10, 10, 1, 100))
res <- left_join(res, ylocs, by = 'nutrient')
res$TimeFrame <- factor(res$trt, levels = timeframes, labels = timeframes)

# get nutrient/site/timeframe medians then merge with toplo for colors
meds <- group_by(toplo, StationCode, nutrient, TimeFrame) %>% 
  summarise(meds = median(value, na.rm = TRUE))
meds <- split(meds, meds$nutrient)
meds <- lapply(meds, function(x){
  
  x$rnks <- scales::rescale(x$meds, c(0, 1))
  return(x)
  
  })
meds <- do.call('rbind', meds)

toplo <- left_join(toplo, meds, by = c('StationCode', 'nutrient', 'TimeFrame'))

# setup facet labels
facet1_names <- list(
  'BC' = 'BC', 
  'BL' = 'BL',
  'PC' =  'PC'
  )
facet2_names <- list(
  'NH4F' = expression(paste('Ammonium (mg', L^-1, ')')), 
  'NO23F' = expression(paste('Nitrite + Nitrate (mg', L^-1, ')')),
  'CHLA_N' = expression(paste('Chlorophyll-a (ug', L^-1, ')'))
  )

plot_labeller <- function(variable,value){
  if (variable=='StationCode')
    return(facet1_names[value])
  if (variable=='nutrient')
    return(facet2_names[value])
  }

# boxplot
p1 <- ggplot(toplo, aes(x = TimeFrame, y = value)) +
  geom_boxplot(aes(fill = rnks)) + 
  facet_grid(nutrient ~ StationCode, scales = 'free_y', labeller = plot_labeller) +
  scale_y_log10() +
  theme_bw() + 
  theme(legend.position = 'none') + 
  scale_x_discrete('Event') +
  scale_fill_gradientn(colours = RColorBrewer::brewer.pal(9, 'BuGn')[3:9]) + 
  geom_text(data = res, aes(x = TimeFrame, y = ylims, label = M))
p1

@

\end{document}