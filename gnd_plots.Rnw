\documentclass[letterpaper,12pt]{article}
\usepackage[top=1in,bottom=1in,left=1in,right=1in]{geometry}
\usepackage{setspace}
\usepackage[colorlinks=true,urlcolor=blue,citecolor=blue,linkcolor=blue]{hyperref}
\usepackage{indentfirst}
\usepackage{multirow}
\usepackage{booktabs}
\usepackage[final]{animate}
\usepackage{graphicx}
\usepackage{verbatim}
\usepackage{rotating}
\usepackage{tabularx}
\usepackage{array}
\usepackage{subfig} 
\usepackage[noae]{Sweave}
\usepackage{cleveref}
\usepackage[figureposition=bottom]{caption}
\usepackage{paralist}
\usepackage{acronym}
\usepackage{outlines}
\usepackage{pdflscape}

% knitr options
<<setup, echo = FALSE, cache = F>>=
library(knitr)
# set global chunk options
opts_chunk$set(fig.path = 'figs/', fig.align = 'center', fig.show = 'hold',message = F, results = 'asis',dev = 'pdf',dev.args=list(family='serif'), fig.pos = '!ht', warning = F, tangle = TRUE)
options(replace.assign=TRUE,width=90)
@

<<echo = FALSE, message = FALSE>>=
# libraries to use
library(dplyr)
library(tidyr)
library(ggplot2)
library(SWMPr)
library(agricolae)

# load data
load('wq_dat.RData')
load('met_dat.RData')
load('nut_dat.RData')
@

\begin{document}

\begin{landscape}
\centering\vspace*{\fill}
<<tsplot, fig.width = 9.5, fig.height = 5.7, echo = FALSE, fig.cap = 'Time series of total precipitation, salinity, pH, and phosphate for Bangs Lake, Grand Bay reserve.  Vertical green bars indicate a heavy rain event in April 2005 and hurricane Isaac in August 2012.  Salinity and pH include a loess smooth to reduce variability.'>>=
# ts plots for BL
# first get cumulative daily precipitation for met
# then combine wq and met, take daily ave, make long form

# met process for totprcp
met_proc <- mutate(met_dat, datetimestamp = as.Date(datetimestamp)) %>% 
  rename(date = datetimestamp) %>% 
  select(-TimeFrame) %>% 
  group_by(date) %>% 
  summarize(totprcp = sum(totprcp, na.rm = TRUE))

# nutrients process for BL phosphorus 
nut_proc <- filter(nut_dat, nutrient == 'PO4F' & StationCode == 'BL') %>% 
  select(-nutrient, -value, -TimeFrame, -stat_nut, -StationCode) %>% 
  rename(logP = logvalue)
  
# combine wq with met and nut
toplo <- filter(wq_dat, StationCode == 'BL') %>% 
  select(-StationCode) %>% 
  mutate(datetimestamp = as.Date(datetimestamp)) %>% 
  rename(date = datetimestamp) %>% 
  group_by(date, TimeFrame) %>% 
  summarise_each(funs(mean(., na.rm = TRUE))) %>% 
  full_join(met_proc, by = 'date') %>% 
  full_join(nut_proc, by = 'date') %>% 
  select(-TimeFrame) %>% 
  gather('variable', 'value', sal:logP) %>% 
  mutate(variable = factor(variable, 
    levels = c('totprcp', 'sal', 'ph', 'logP'),
    labels = c('Total precipitation (mm/d)', 'Salinity (ppt)', 'pH', 'log-Orthophosphate (mg/L)')
    ))

# event dates
events <- c('2005-04-01', '2012-08-01')
events <- as.Date(events)

# the plot
p <- ggplot(toplo, aes(x = date, y = value)) + 
  geom_line() +
  geom_vline(xintercept = as.numeric(events), colour = 'lightgreen', alpha = 0.6, size = 3) +
  geom_line() +
  geom_point(data = filter(toplo, variable == 'log-Orthophosphate (mg/L)'), alpha = 0.8, size = 2) + 
  facet_wrap(~variable, scales = 'free_y', ncol = 1) +
  theme_bw() +
  theme(
    axis.title.x = element_blank(), 
    axis.title.y = element_blank()
    ) +
  stat_smooth(data = filter(toplo, variable %in% c('Salinity (ppt)', 'pH')),
    method = 'loess', span = 0.1, n = 2000, se = FALSE, size = 1, colour = 'lightblue')
p
@
\end{landscape}
\clearpage

<<tukey, fig.width = 6, fig.height = 7, echo = FALSE, fig.cap = 'Boxplot summaries of nutrient data at Bangs Lake, Grand Bay grouped by events.  Letters indicate events for each nutrient with significantly different observations based on Tukey multiple comparison analysis.  Boxes represent the interquartile range (IQR, 25\\textsuperscript{th} to 75\\textsuperscript{th} percentile) with the median as the middle horizonal line.  Outliers are present beyond whiskers (1.5$\\cdot$IQR). E1A: event 1 acute, E1C: event 1 chronic, NI: non-impact, E2A: event 2 acute, E2C: event 2 chronic.'>>=
# BL station 
nut_proc <- filter(nut_dat, StationCode == 'BL') %>% 
  select(-StationCode, -stat_nut) 

# split data by unique station/nutrient variable
sep_data <- split(nut_proc, nut_proc$nutrient)

# run a Tukey multiple comparison for each station, nutrient variable combo
res <- lapply(sep_data, function(x){

  mod <- aov(logvalue ~ TimeFrame, data = x)
  tuk_mod <- HSD.test(mod, 'TimeFrame', group = T)
  grps <- tuk_mod$groups
  grps$trt <- gsub('[[:space:]].*$', '', grps$trt)
  grps
  
  })

# combine results for plotting
res <- do.call('rbind', res) %>% 
  mutate(
    nutrient = gsub('\\.[0-9]', '', row.names(.))
  ) %>% 
  rename(TimeFrame = trt)
ylocs <- data.frame(nutrient = c('PO4F', 'NH4F', 'NO23F', 'CHLA_N'), ylims = c(10, 10, 1, 100))
res <- left_join(res, ylocs, by = 'nutrient')
timeframes <- c('E1A', 'E1C', 'NI', 'E2A', 'E2C')
res$TimeFrame <- factor(res$TimeFrame, levels = timeframes, labels = timeframes)

nut_proc$nutrient <- factor(nut_proc$nutrient, 
  levels = c('PO4F', 'NH4F', 'NO23F', 'CHLA_N'), 
  labels = c('Orthophosphate (mg/L)', 'Ammonium (mg/L)', 'Nitrite + Nitrate (mg/L)', 'Chlorophyll a (ug/L)')
)
res$nutrient <- factor(res$nutrient, 
  levels = c('PO4F', 'NH4F', 'NO23F', 'CHLA_N'), 
  labels = c('Orthophosphate (mg/L)', 'Ammonium (mg/L)', 'Nitrite + Nitrate (mg/L)', 'Chlorophyll a (ug/L)')
)

# the boxplots but with letters above each box indicating different groups
p <- ggplot(nut_proc, aes(x = TimeFrame, y = value)) +
  geom_boxplot(fill = 'lightblue') + 
  facet_wrap(~ nutrient, ncol =1, scales = 'free_y') +
  scale_y_log10('Log-value', expand = c(0, 0.3)) +
  theme_bw() +
  scale_x_discrete('Event') +
  geom_text(data = res, aes(x = TimeFrame, y = ylims, label = M))
  
p

@
\clearpage

<<phvsal1, fig.width = 9, fig.height = 6, echo = FALSE, fig.cap = 'Scatterplots of pH versus salinity for each of the time frames, grouped by station.  Observations are daily averages from the continuous time series. E1A: event 1 acute, E1C: event 1 chronic, NI: non-impact, E2A: event 2 acute, E2C: event 2 chronic.'>>=

# select BL, BC, PC, split by station
wq_proc <- filter(wq_dat, StationCode %in% c('BL', 'PC', 'BC')) %>% 
  mutate(datetimestamp = as.Date(datetimestamp)) %>% 
  rename(date = datetimestamp) %>% 
  group_by(date, StationCode, TimeFrame) %>% 
  summarise_each(funs(mean(., na.rm = TRUE))) %>% 
  rename(Station = StationCode)

p1 <- ggplot(wq_proc, aes(x = sal, y = ph, colour = Station, group = Station)) + 
  geom_point(alpha = 0.6, size = 4) + 
  theme_bw() + 
  scale_x_continuous('Salinity (ppt)') + 
  scale_y_continuous('pH') +
  theme(legend.position = c(0.83, 0.25)) + 
  facet_wrap(~TimeFrame)
p1 
@
\clearpage

<<phvsal2, fig.width = 9, fig.height = 3, echo = FALSE, fig.cap = 'Scatterplots of pH versus salinity for one month following the two acute exposure events (E1A, E2A) and 2010 during the non-impact (NI) time frame.  Values are thirty-minute observations at each station. E1A: event 1 acute, NI: non-impact, E2A: event 2 acute.'>>=

# select BL, BC, PC, split by station
wq_proc <- filter(wq_dat, StationCode %in% c('BL', 'PC', 'BC')) %>% 
  split(., .$StationCode)

# get all obs within one month of the beginning of each time frame
wq_proc <- lapply(wq_proc, function(x){
  
  # get within a time period from epochs
  sel_dates <- as.POSIXct(
    c('04-01-2005 0:0', '05-01-2005 0:0', '01-01-2010 0:0', '01-01-2011 0:0', 
      '9-01-2012 0:0', '10-01-2012 0:0'), 
    format = '%m-%d-%Y %H:%M', tz = 'America/Regina'
    )
  inds <- with(x, 
      datetimestamp >= sel_dates[1] & datetimestamp <= sel_dates[2] |
      datetimestamp >= sel_dates[3] & datetimestamp <= sel_dates[4] |
      datetimestamp >= sel_dates[5] & datetimestamp <= sel_dates[6]
    )

  x[inds, ]
})

# recombine for plotting
wq_proc <- do.call('rbind', wq_proc) %>% 
  data.frame(., row.names = 1:nrow(.)) %>% 
  filter(TimeFrame %in% c('E1A', 'NI', 'E2A')) %>% 
  rename(Station = StationCode) %>% 
  mutate(TimeFrame = factor(TimeFrame, levels = c('E1A', 'NI', 'E2A'), 
    labels = c('E1A (one month)', 'NI (one year)', 'E2A (one month)')
  ))

p <- ggplot(wq_proc, aes(x = sal, y = ph, colour = Station, group = Station)) + 
  geom_point(alpha = 0.4, size = 2) + 
  theme_bw() + 
  scale_x_continuous('Salinity (ppt)') + 
  scale_y_continuous('pH') +
  facet_wrap(~TimeFrame)
p 
@
\clearpage

<<ccf, echo = FALSE, eval = FALSE>>=
# pre-process wq for stations, timeframe and equal lags
wq_proc <- filter(wq_dat, StationCode %in% c('BL', 'PC', 'BC')) %>% 
  filter(TimeFrame %in% c('E1A', 'E2A')) %>% 
  rename(Station = StationCode) %>% 
  filter(strftime(datetimestamp, '%M') %in% c('00', '30')) # this has to be done to make lags valid

# pre-process nut for stations, timeframe
nut_proc <- filter(nut_dat, StationCode %in% c('BL', 'PC', 'BC')) %>% 
  filter(TimeFrame %in% c('E1A', 'E2A')) %>% 
  rename(Station = StationCode) %>% 
  select(-stat_nut, -value)

wq_ccf <- function(dat_in, stats){
  
  # filter dat_in for station data, reformat for analysis
  toproc <- filter(dat_in, Station %in% stats) %>% 
    gather(variable, value, sal:ph) %>% 
    spread(Station, value) %>% 
    mutate(TimeFrame = factor(TimeFrame, levels = c('E1A', 'E2A')))
  toproc <- split(toproc, f = list(toproc$TimeFrame, toproc$variable))
  
  # ccf for timeframe, wq var combos
  toproc <- lapply(toproc, function(x){
    cors <- ccf(x[, stats[1]], x[, stats[2]], plot = FALSE, na.action = na.pass)
    ind <- which.max(cors$acf)
    with(cors, c(lag[ind], acf[ind]))
  })

  return(toproc)
  
}
nut_ccf <- function(dat_in, stats){
  
  # filter dat_in for station data, reformat for analysis
  toproc <- filter(dat_in, Station %in% stats) %>% 
    spread(Station, logvalue) %>% 
    mutate(TimeFrame = factor(TimeFrame, levels = c('E1A', 'E2A')))
  toproc <- split(toproc, f = list(toproc$TimeFrame, toproc$nutrient))
  
  # ccf for timeframe, wq var combos
  toproc <- lapply(toproc, function(x){
    cors <- ccf(x[, stats[1]], x[, stats[2]], plot = FALSE, na.action = na.pass)
    ind <- which.max(cors$acf)
    with(cors, c(lag[ind], acf[ind]))
  })

  return(toproc)
  
}

wq_ccf(wq_proc, c('BL', 'BC'))

@
\clearpage

\end{document}